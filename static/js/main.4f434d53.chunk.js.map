{"version":3,"sources":["registerServiceWorker.js","TagBar.js","Msg.js","TreatmentCard.js","HistoryDate.js","../../../aultfarms-lib/src/util/tagHelpers.js","HistoryTag.js","HistoryGroup.js","HistoryTime.js","Prefs.js","History.js","HistorySelector.js","TagPane.js","Keypad.js","Colorbar.js","TreatmentDateBar.js","RecordInput.js","TreatmentEditor.js","App.js","../../../aultfarms-lib/src/trello/module/errors.js","../../../aultfarms-lib/src/trello/module/sequences.js","../../../aultfarms-lib/src/treatments/module/sequences.js","../../../aultfarms-lib/src/treatments/module/index.js","../../../aultfarms-lib/src/incoming/module/sequences.js","../../../aultfarms-lib/src/incoming/module/index.js","../../../aultfarms-lib/src/dead/module/sequences.js","../../../aultfarms-lib/src/dead/module/index.js","../../../aultfarms-lib/src/trello/module/index.js","../../../aultfarms-lib/src/windowSize/module/sequences.js","../../../aultfarms-lib/src/windowSize/module/index.js","../../../aultfarms-lib/src/trello/provider/index.js","../../../aultfarms-lib/src/windowSize/provider/index.js","module/sequences.js","module/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","connect","record","colors","msg","changeRecord","sequences","props","color","tag","className","style","borderColor","is_saved","value","type","onChange","evt","preventDefault","target","number","text","tags","length","treatment","_","map","t","i","key","historySelector","treatmentRecords","recordsfordate","filter","r","date","reverse","sortBy","dateLastActivity","count","reduce","sum","clone","recordindex","rangeContainsTag","start","end","group","find","tag_ranges","groups","asOfDate","arguments","undefined","groupname","g","allfound","filteredToDate","isAfter","sorted","tagStrToObj","str","groupmatches","trim","matches","tagObjToStr","incoming","taggroup","tagHelpers","groupForTag","records","recordsfortag","prevdays","days","moment","diff","daystr","prevstr","treatments","dead","sortBySignal","all_groups","each","keys","tagIndex","acc","tagstr","tagobj","numtrt","numdead","numalive","day","head","width","onClick","sort","perc","name","slice","format","numeral","extendMoment","Moment","deadRecords","today","lastmonth","range","subtract","lastthreemonths","lastyear","deadlastmonth","within","deadlastthreemonths","deadlastyear","totallastmonth","totallastthreemonths","totallastyear","logout","href","version","ret","active","historySelectionChangeRequested","windowSize","maxHeight","orientation","keyCode","this","onBackspace","onNumber","document","addEventListener","keypressed","bind","removeEventListener","n","onClear","arr","info","isObject","val","clicked","numberClicked","renderCalcRow","clearClicked","backspaceClicked","React","Component","c","k","colorButtonClicked","backgroundColor","treatmentCodes","showTreatmentEditor","treatmentTextClicked","recordsValid","saveRecord","canSave","num","prefix","hideTreatmentEditor","codelistFromText","tokens","code","on","textFromCodelist","list","join","recentTreatmentClicked","codesOn","keyBy","recent","includes","push","recentCodesFromRecords","thiscode","findIndex","treatmentEditorActive","trello","init","dir","flexDirection","_CerebralError","TrelloSaveError","apply","_CerebralError2","TrelloGetError","_CerebralError3","TrelloAuthorizeError","data","CARD_FIELDS","config","warnings","wForgottenReturn","_ref","authorize","e","message","JSON","stringify","stack","initialized","boards","lists","loadList","_ref2","try","boardName","get","fields","b","closed","result","board","post","concat","id","labels","listName","l","_ref3","cards","statePath","_ref4","store","set","reloadOneCard","_ref5","card","listname","idList","toLowerCase","putCard","_ref6","url","put","err","addLabelToCard","_ref7","idLabel","_templateObject8","saveTreatment","existing","cloneDeep","datematches","rest","treatmentmatches","split","cardName","fetchConfig","parse","desc","colorsCardToRecord","codesCardToRecord","parts","p","_p$trim$split","_p$trim$split2","propname","propval","replace","_$map","_$map2","computeStats","deadrecords","groupdeads","d","index","_templateObject13","_templateObject12","_templateObject11","_templateObject10","_templateObject9","tags_and_pens_str","note","tags_and_pens","tp","toUpperCase","toString","_$reduce","errors","reloadOneRecord","recordIndex","refreshedRecord","previous","newone","saveDead","add","isBefore","alreadyDead","existingDate","authorized","resized","isSmall","height","TrelloClientLoadError","check","Trello","delay","resolve","reject","persist","scope","read","write","expiration","success","deauthorize","path","params","_dimensions","innerWidth","innerHeight","seq","_M","dimensions","windowResized","context","sequencepath","updateMsg","sequence","historyGroupSortClicked","parallel","historyGroup","modules","treatmentsModule","incomingModule","deadModule","trelloModule","windowSizeModule","providers","trelloProvider","windowSizeProvider","trelloErrors","CerebralApp","AppModule","devtools","ReactDOM","render","app","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4f434d53.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './TagBar.css';\n\nexport default connect({\n  record: state`record`,\n  colors: state`treatments.colors`,\n     msg: state`msg`,\n  changeRecord: sequences`changeRecord`,\n}, function TagBar(props) {\n  const colorTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({tag: { color: evt.target.value} });\n  };\n\n  const tagNumberTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({tag: { number: +(evt.target.value)} });\n  };\n\n  const color = props.colors[props.record.tag.color];\n  return (\n    <div className=\"tagbar\"\n         style={{ borderColor: props.record.is_saved ? '#CCCCCC' : 'red' }}>\n      <input className=\"colortext\"\n             style={{ color: color, borderColor: color }}\n             value={props.record.tag.color}\n             type=\"text\"\n             onChange={colorTextChanged} />\n      <input className=\"numbertext\"\n             value={props.record.tag.number || ''} \n             type=\"text\" \n             onChange={tagNumberTextChanged} />\n    </div>\n  );\n\n});\n\n","import React from  'react';\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport './Msg.css';\n\nexport default connect({\n  msg: state`msg`,\n}, function Msg(props) {\n  return (\n    <div className={'msg msg' + props.msg.type}>\n      {props.msg.text}\n    </div>\n   );\n});\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport _ from 'lodash';\n\nimport './TreatmentCard.css';\n\nexport default connect({\n}, function TreatmentCard(props) { return (\n  <div className=\"treatmentcard\">\n    <div className=\"treatmentcardcount\">{props.record.tags.length} head</div>\n    -\n    <div className=\"treatmentcardtreatment\">{props.record.treatment}</div>\n    <div className=\"treatmentcardtags\">\n     {_.map(props.record.tags, (t,i) => \n        <div className=\"treatmentcardtag\" key={'treatmentcardtag'+i}>\n          {t.color+t.number}\n        </div>\n      )}\n    </div>\n  </div>\n)});\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport TreatmentCard from './TreatmentCard';\n\nexport default connect({\n   historySelector: state`historySelector`,\n  treatmentRecords: state`treatments.records`,\n            record: state`record`,\n}, function HistoryDate(props) {\n  // Show cards for current date:\n  let recordsfordate = _.filter(props.treatmentRecords, r=>(r.date === props.record.date));\n  recordsfordate = _.reverse(_.sortBy(recordsfordate,r=>r.dateLastActivity));\n\n  const count = _.reduce(recordsfordate, (sum,r) => sum + r.tags.length, 0);\n\n  return (\n    <div className=\"history\">\n      <div className=\"historytitle\">\n        {props.record.date+': '+count} head total.\n      </div>\n      {_.map(recordsfordate, (r,i) => \n        <TreatmentCard key={'treatmentcard'+i}\n                       record={_.clone(r)}\n                       recordindex={i} />\n      )}\n    </div>\n  );\n});\n\n","import _ from 'lodash';\nimport moment from 'moment'; // Note that a tag range is pre-processed to ensure that it\n// only has tags of the same color.  If there is a color\n// split on a group, the group will have 2 separate ranges.\n\nexport var rangeContainsTag = function rangeContainsTag(r, tag) {\n  return tag.color === r.start.color && tag.number >= r.start.number && tag.number <= r.end.number;\n};\nexport var groupContainsTag = function groupContainsTag(group, tag) {\n  //console.log('checking tag ',tag,' against group ranges ', group);\n  return _.find(group.tag_ranges, function (r) {\n    return rangeContainsTag(r, tag);\n  });\n}; // groupForTag has to deal with historic repeated tag color/number\n// combinations.  i.e. 3 years ago another \"RED13\" may have existed.\n// We need to figure out which one of these is the \"correct\" one.\n// This can be slightly fuzzy, because one or two mistakes is not\n// going to break the bank.\n//\n// The simplest algorithm is one that assumes there is only one\n// of each combo on-site at any given time.  Therefore, when a \n// new group comes in and gets tagged, they supercede any previous\n// version of that tag.  So the \"latest\" copy of the tag is always\n// the \"correct\" one for \"today\".\n//\n// Unfortunately, sometimes our scripts may want to compute historic death\n// loss and things like that.  \"historic\" means sometimes we're looking in \n// a date range that is not \"today\".  Therefore, we have to uglify this \n// function definition by adding a third optional parameter of \"asOfDate\"\n// which is the ballpark date of interest: i.e. it will take the tag number\n// as of that day.\n\nexport var groupForTag = function groupForTag(groups, tag) {\n  var asOfDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // If the tag already has a \"groupname\" key, just return that:\n  if (tag && tag.groupname) return _.find(groups, function (g) {\n    return g.groupname === tag.groupname;\n  });\n\n  var allfound = _.filter(groups, function (g) {\n    return groupContainsTag(g, tag);\n  }); // if none, return false:\n\n\n  if (!allfound || allfound.length < 1) return false;\n  if (!asOfDate) asOfDate = moment(); // default to today\n  else asOfDate = moment(asOfDate, 'YYYY-MM-DD');\n\n  var filteredToDate = _.filter(allfound, function (g) {\n    return !moment(g.date, 'YYYY-MM-DD').isAfter(asOfDate);\n  }); // !isAfter = equal or before\n\n\n  if (!filteredToDate) {\n    console.log('WARNING: groupForTag: found multiple possible groups, but after filtering for date there were none left!');\n    return false;\n  }\n\n  var sorted = _.sortBy(filteredToDate, function (g) {\n    return g.date;\n  }); // default lexical sorting will put oldest on top, newest on bottom.  \n  // Need to take the newest one that is prior to the reference date\n\n\n  return sorted[sorted.length - 1];\n};\nexport var tagStrToObj = function tagStrToObj(str) {\n  str = str.trim(); // First, check if it is group-prefixed tag:\n\n  var groupmatches = str.match(/^([A-Z]+:[A-Z]{3}[0-9]{2}-[0-9A-Z]):([A-Za-z]+) *([0-9]+)$/);\n\n  if (groupmatches) {\n    return {\n      groupname: groupmatches[1],\n      color: groupmatches[2],\n      number: +(groupmatches[3] || 1)\n    };\n  } // Otherwise, it is just a color/number combo:\n\n\n  var matches = str.match(/^([A-Za-z]+) ?([0-9]+)?$/);\n  if (!matches) return {\n    color: 'NOTAG',\n    number: 1\n  };\n  return {\n    color: matches[1],\n    number: +matches[2] || 1\n  };\n};\nexport var tagObjToStr = function tagObjToStr(t) {\n  if (!t) return '';\n  var str = '';\n  if (t.groupname) str += t.groupname + ':'; // group:colornumber\n\n  str += t.color || '';\n  str += t.number || '';\n  return str;\n};","import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { tagHelpers } from 'aultfarms-lib/util'\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nexport default connect({\n   historySelector: state`historySelector`,\n  treatmentRecords: state`treatments.records`,\n            record: state`record`,\n          incoming: state`incoming`,\n}, function HistoryTag(props) {\n  // find all records with this tag in it:\n  const taggroup = tagHelpers.groupForTag(props.incoming.records, props.record.tag, props.record.date);\nconsole.log('taggroup = ', taggroup, ', tag = ', props.record.tag);\n  let recordsfortag = _.filter(props.treatmentRecords, r => {\n    return _.find(r.tags, t => {\n      // must be the same tag color/number\n      if (!(t.number===props.record.tag.number && t.color===props.record.tag.color)) {\n        return false;\n      }\n      // tag number and color matches, check group;\n      const group = tagHelpers.groupForTag(props.incoming.records, t, r.date);\n      if (!taggroup && !group) return true; // both have no group\n      if (!taggroup &&  group) return false;// have one\n      if ( taggroup && !group) return false;// but not the other\n      return (taggroup.groupname === group.groupname);\n    });\n  });\n  recordsfortag = _.reverse(_.sortBy(recordsfortag,r=>r.date));\nconsole.log('recordsfortag = ', recordsfortag);\n  let prevdays = -1; // keeps track of previous days in mapper\n  return (\n    <div className=\"historytag\">\n      {_.map(recordsfortag, (r,i) => {\n        const days = moment().diff(moment(r.date,'YYYY-MM-DD'), 'days');\n        let daystr = days + ' days ago';\n        if (days === 0) daystr = 'today';\n        if (days === 1) daystr = 'yesterday';\n        let prevstr = '(+'+(days-prevdays)+')';\n        if (prevdays < 0) prevstr = '';\n        prevdays = days;\n        return (\n        <div className=\"historytagentry\" key={'historyline'+i}>\n          <div className=\"historytreatment\">\n            {r.treatment}\n          </div>\n          <div className=\"historyduration\">\n            { daystr } { prevstr }\n          </div>\n        </div>\n      )})}\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport {groupForTag} from 'aultfarms-lib/util/tagHelpers';\n\nimport './HistoryGroup.css';\n\nexport default connect({\n  historySelector: state`historySelector`,\n           groups: state`incoming.records`,\n       treatments: state`treatments`,\n             dead: state`dead`,\n           record: state`record`,\n           sortBy: state`historyGroup.sort`,\n  sortBySignal: sequences`historyGroupSortClicked`,\n}, function HistoryGroup(props) {\n  let all_groups = props.groups;\n  const group = groupForTag(props.groups, props.record.tag);\n  if (group) all_groups = [ group ]; // just show group for current tag\n\n  // For each group, compute Prob(dead), Prob(dead | 0 treatments), ...\n  // \"0 treatments\" could mean either \"received at least 0 treatments\" or \"received exactly  0\"\n  // I'm picking the \"exactly\" one for now\n  _.each(all_groups, g => {\n    const numdead = (g.dead ? g.dead.length : 0);\n    // treatments.tagIndex looks like:\n    // { <tagstr>: { <groupname>: { group: {...}, treatments: [ { treatment: \"ExDr\", date: \"2019-08-07\" } ] } }\n    // and the resulting new indexByNumTreatments will look like:\n    // [ 0: { dead: [ calves that died with 0 treatments }, alive: [ calves alive with 0 treatments ] }\n    // [ 1: { dead: [ calves that died with 1 treatment  }, alive: [ calves alive with 1 treatment ] }\n    // ....\n    const indexByNumTreatments = _.reduce(_.keys(props.treatments.tagIndex), (acc,tagstr) => {\n      const tagobj = props.treatments.tagIndex[tagstr];\n      const calf = tagobj[g.groupname];\n      if (!calf) return;\n      const isdead = props.dead.tagIndex[tagstr] ? props.dead.tagIndex[tagstr][g.groupname] : false;\n      const category = \"pd\"+tagobj.treatments.length; // pd0, pd1, pd2, ...\n      const numtrt = tagobj.treatments.length;\n      if (!acc[numtrt]) acc[numtrt] = { numdead: [], numalive: [] };\n      \n    }, []);\n  });\n\n  all_groups = _.sortBy(all_groups, g => {\n    if (props.sortBy === 'date') return g.day; // day string is lexicographic for sorting\n    if (props.sortBy === 'name') return g.groupname;\n    if (props.sortBy === 'head') return g.head;\n    if (props.sortBy === 'pd') return (g.dead ? g.dead.length : 0) / (g.head ? g.head : 1);\n    return g.day; // default\n  });\n  all_groups = _.reverse(all_groups); // other way seems better\n  return (\n    <div className=\"historygroup\">\n      { group ? ' Showing group for current tag: '+props.record.tag.color+props.record.tag.number : '' }\n      <table width=\"100%\">\n      <tbody>\n        <tr>\n          <th onClick={() => props.sortBySignal({ sort: 'name'})}>Name</th>\n          <th onClick={() => props.sortBySignal({ sort: 'days'})}>Days</th>\n          <th onClick={() => props.sortBySignal({ sort: 'head'})}>Head</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd'})}>P(D)</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd_0'})}>P(D|0T)</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd_1'})}>P(D|1T)</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd_2'})}>P(D|2T)</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd_3'})}>P(D|3T)</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd_4'})}>P(D|4T)</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd_5'})}>P(D|5T)</th>\n          <th onClick={() => props.sortBySignal({ sort: 'pd_6'})}>P(D|6+)</th>\n        </tr>\n      { \n        _.map(all_groups, (g,i) => {\n          let perc = 0;\n          if (g.dead && g.head) perc = g.dead.length / g.head;\n          let name = g.groupname;\n          if (name.length > 15) name = name.slice(0,6)+'...'+name.slice(-6);\n          return (\n            <tr className={ perc < .05 ? 'historygroupgood' : perc < 0.1 ? 'historygroupmeh' : 'historygroupbad' } key={'historygrouprow'+i}>\n              <td className=\"historygroupname\"><span name=\"historygroupnamepill\">{ name }</span></td>\n              <td className=\"historygroupdate\"> { moment(g.date,'YYYY-MM-DD').format('M/DD/YY') }</td>\n              <td className=\"historygroupdead\">{ g.dead ? g.dead.length : 0 }</td>\n              <td className=\"historygroupperc\">{ perc > 0 ? '('+numeral(perc).format('0.00%')+')' : '' }</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n      </table>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport { extendMoment } from 'moment-range';\nimport Moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nconst moment = extendMoment(Moment);\n\nexport default connect({\n  historySelector: state`historySelector`,\n      deadRecords: state`dead.records`,\n           record: state`record`,\n}, function HistoryTime(props) {\n\n  const today = moment();\n  const lastmonth = moment.range(today.clone().subtract(1,'months'),today);\n  const lastthreemonths = moment.range(today.clone().subtract(3,'months'),today);\n  const lastyear = moment.range(today.clone().subtract(1,'years'),today);\n\n  const deadlastmonth       = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastmonth));\n  const deadlastthreemonths = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastthreemonths));\n  const deadlastyear        = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastyear));\n\n  const totallastmonth       = _.reduce(deadlastmonth,       (sum,r) => sum+r.tags.length, 0);\n  const totallastthreemonths = _.reduce(deadlastthreemonths, (sum,r) => sum+r.tags.length, 0);\n  const totallastyear        = _.reduce(deadlastyear,        (sum,r) => sum+r.tags.length, 0);\n  return (\n    <div className=\"historydead\">\n      <div className=\"historydeadentry\">\n        Past month: {totallastmonth} dead ({numeral(totallastmonth/lastmonth.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"historydeadentry\">\n        Past 3 months: {totallastthreemonths} dead ({numeral(totallastthreemonths/lastthreemonths.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"historydeadentry\">\n        Past year: {totallastyear} dead ({numeral(totallastyear/lastyear.diff('days')).format('0.00')}/day)\n      </div>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { sequences } from 'cerebral/tags';\n\nimport './Prefs.css';\n\nimport { version } from '../package.json';\n\nexport default connect({\n  logout: sequences`logout`,\n}, function Prefs(props) {\n\n  const logoutClicked = evt => {\n    props.logout();\n    evt.preventDefault();\n  }\n\n  return (\n    <div className=\"prefs\">\n      <p className=\"prefslink\" href=\"#\" onClick={logoutClicked}>Change Trello Account</p>\n      <p className=\"prefsinfo\">Treatments App Version {version}</p>\n    </div>\n  );\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport  HistoryDate from './HistoryDate';\nimport   HistoryTag from './HistoryTag';\nimport HistoryGroup from './HistoryGroup';\nimport  HistoryTime from './HistoryTime';\nimport        Prefs from './Prefs';\n\nimport './History.css';\n\nexport default connect({\n   historySelector: state`historySelector`,\n}, function History(props) {\n  let ret = (<div className='history'>Unknown History Type</div>);\n  switch(props.historySelector.active) {\n    case  'date': ret = <HistoryDate />;  break;\n    case   'tag': ret = <HistoryTag />;   break;\n    case 'group': ret = <HistoryGroup />; break;\n    case  'time': ret = <HistoryTime />;  break;\n    case 'prefs': ret = <Prefs />;  break;\n    default:\n  }\n  return ret;\n});\n\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './HistorySelector.css';\n\nexport default connect({\n  historySelector: state`historySelector`,\n  historySelectionChangeRequested: sequences`historySelectionChangeRequested`,\n}, function HistorySelector(props) {\n  const prefsClicked = evt => props.historySelectionChangeRequested({ active: 'prefs' });\n  const  dateClicked = evt => props.historySelectionChangeRequested({ active: 'date' });\n  const   tagClicked = evt => props.historySelectionChangeRequested({ active: 'tag' });\n  const groupClicked = evt => props.historySelectionChangeRequested({ active: 'group' });\n  const  timeClicked = evt => props.historySelectionChangeRequested({ active: 'time' });\n\n  return (\n    <div className=\"historyselector\">\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'prefs' ? 'historyselectorbuttonactive' : '')}\n           onClick={prefsClicked}>\n        <FontAwesome name='bars' />\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'date' ? 'historyselectorbuttonactive' : '')}\n           onClick={dateClicked}>\n        Date\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'tag' ? 'historyselectorbuttonactive' : '')}\n           onClick={tagClicked}>\n        Tag\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'group' ? 'historyselectorbuttonactive' : '')}\n           onClick={groupClicked}>\n        Group\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'time' ? 'historyselectorbuttonactive' : '')}\n           onClick={timeClicked}>\n        Time\n      </div>\n\n    </div>\n  );\n\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport TagBar from './TagBar';\nimport Msg from './Msg';\nimport History from './History';\nimport HistorySelector from './HistorySelector';\n\nimport './TagPane.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n  historySelector: state`historySelector`,\n}, function TagPane(props) {\n  let maxHeight = '98vh';\n  const active = props.historySelector.active;\n  if (props.windowSize.orientation === 'portrait' && active !== 'group' && active !== 'time') {\n    maxHeight = '49vh';\n  }\n  return (\n    <div className='tagpane' style={{ maxHeight }}> \n      <TagBar />\n      <Msg />\n      <HistorySelector />\n      <History />\n    </div>\n   );\n});\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\n\nimport './Keypad.css';\n\nexport default connect({\n}, class Keypad extends React.Component {\n\n  keypressed(evt) {\n    if (evt.keyCode === 8) {\n      this.props.onBackspace(); // backspace\n      evt.preventDefault();\n    }\n    const number = evt.keyCode - 48; // 0 is key 48\n    if (number >= 0 && number <=9) {\n      this.props.onNumber(number);\n      evt.preventDefault();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  numberClicked(n) {\n    return (evt) => {\n      evt.preventDefault();\n      this.props.onNumber(n);\n    }\n  }\n\n  clearClicked(evt) {\n    evt.preventDefault();\n    this.props.onClear();\n  }\n\n  backspaceClicked(evt) {\n    evt.preventDefault();\n    this.props.onBackspace();\n  }\n\n  renderCalcRow(arr) {\n    return (\n      <div className=\"keypadrow\"> \n        {\n          arr.map(info => \n              <div className=\"keypadbutton\"\n                   key={'calcwrap'+(_.isObject(info) ? info.val : info)}\n                   onClick={_.isObject(info) ? info.clicked : this.numberClicked(info).bind(this) }>\n                {_.isObject(info) ? info.val : info}\n              </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"keypad\">\n        {this.renderCalcRow([1,2,3])}\n        {this.renderCalcRow([4,5,6])}\n        {this.renderCalcRow([7,8,9])}\n        { \n          this.renderCalcRow([\n            { val: 'C', clicked: this.clearClicked.bind(this) },\n            0,\n            { val: '<--', clicked: this.backspaceClicked.bind(this) },\n          ])\n        }\n      </div>\n    );\n  }\n});\n\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './Colorbar.css';\n\nexport default connect({\n  record: state`record`,\n  colors: state`treatments.colors`,\n  changeRecord: sequences`changeRecord`,\n}, class Colorbar extends React.Component {\n\n  keypressed(evt) {\n    let color = '';\n    switch(evt.key) {\n      case 'y': color = 'YELLOW'; break;\n      case 'g': color = 'GREEN'; break;\n      case 'b': color = 'BLUE'; break;\n      case 'r': color = 'RED'; break;\n      case 'p': color = 'PURPLE'; break;\n      case 'w': color = 'WHITE'; break;\n      case 'n': color = 'NOTAG'; break;\n      default: return;\n    }\n    evt.preventDefault();\n    this.props.changeRecord({tag: { color: color } });\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  colorButtonClicked(color) { \n    const props = this.props;\n    return evt => {\n      evt.preventDefault();\n      props.changeRecord({tag: { color: color } });\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"colorbar\">\n        {_.keys(this.props.colors).map((c,k) => \n            <div key={'color'+c} \n                 className=\"colorbutton\"\n                 onClick={this.colorButtonClicked(c)} \n                 style={{backgroundColor: this.props.colors[c] }}>\n            </div>\n         )}\n         <div key={'colorNOTAG'}\n              className=\"colorbutton\"\n              onClick={this.colorButtonClicked('NOTAG')}\n              style={{backgroundColor: '#CCCCCC'}}>\n          N\n        </div>\n      </div>\n    );\n  }\n\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './TreatmentDateBar.css';\n\nexport default connect({\n          record: state`record`,\n  treatmentCodes: state`treatments.treatmentCodes`,\n         changeRecord: sequences`changeRecord`,\n  showTreatmentEditor: sequences`showTreatmentEditor`,\n}, function TreatmentDateBar(props) {\n\n  const dateChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({date: evt.target.value});\n  };\n\n  const treatmentTextClicked = evt => {\n    evt.preventDefault();\n    props.showTreatmentEditor();\n  };\n\n  return (\n    <div className=\"treatmentdatebar\">\n      <input className='treatmentdateinput'\n             value={props.record.date}\n             type=\"date\"\n             onChange={dateChanged} />\n      <input className='treatmentstring'\n             value={props.record.treatment}\n             type=\"text\"\n             onClick={treatmentTextClicked}\n             onChange={treatmentTextClicked}/>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport Keypad from './Keypad.js';\nimport Colorbar from './Colorbar.js';\nimport TreatmentDateBar from './TreatmentDateBar.js';\n\nimport './RecordInput.css';\n\nexport default connect({\n          record: state`record`,\n          colors: state`colors`,\n  treatmentCodes: state`treatments.treatmentCodes`,\n    recordsValid: state`recordsValid`,\n       changeRecord: sequences`changeRecord`,\n         saveRecord: sequences`saveRecord`,\n}, function RecordInput(props) {\n\n  const numberClicked = num => {\n    const prefix = '' + (props.record.tag.number || ''); // convert to string\n    props.changeRecord({tag: { number: prefix+num} });\n  };\n\n  const clearClicked = () => {\n    props.changeRecord({ tag: { number: '', color: '' } });\n  };\n\n  const backspaceClicked = () => {\n    let str = ''+props.record.tag.number;\n    if (str.length > 0) str = str.slice(0,-1);\n    props.changeRecord({ tag: { number: +(str) } });\n  };\n\n  const canSave = props.recordsValid && props.record.tag && props.record.tag.number && props.record.tag.color;\n\n  const recordSaveClicked = evt => {\n    if (canSave) {\n      evt.preventDefault();\n      props.saveRecord();\n    }\n  };\n\n  return (\n    <div className=\"recordinput\">\n\n      <Colorbar />\n\n      <TreatmentDateBar />\n\n      <Keypad onNumber={numberClicked}\n              onClear={clearClicked}\n              onBackspace={backspaceClicked} />\n\n      <div className={'savebutton ' + (canSave ? 'savebuttonenabled':'savebuttondisabled')}\n           onClick={recordSaveClicked}>\n        SAVE TREATMENT\n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {sequences,state} from 'cerebral/tags';\n\nimport './TreatmentEditor.css';\n\nexport default connect({\n            record: state`record`,\n    treatmentCodes: state`treatments.treatmentCodes`,\n  treatmentRecords: state`treatments.records`,\n         changeRecord: sequences`changeRecord`,\n  hideTreatmentEditor: sequences`hideTreatmentEditor`,\n}, function TreatmentEditor(props) {\n  const treatmentTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({ treatment: evt.target.value() });\n  };\n\n\n  const codelistFromText = text => {\n    let tokens = text.match(/([A-Z]([a-z]+)?)/g); // [ 'Z', 'Za', etc]\n    if (!tokens) tokens = [];\n    return _.map(props.treatmentCodes, c => {\n      return {\n        code: c.code,\n        name: c.name,\n        on: !!_.find(tokens,t=>c.code===t),\n      };\n    });\n  };\n  const textFromCodelist = list => _.join(_.map(_.filter(list,c=>c.on),c=>c.code),'');\n  const treatmentCodeButtonClicked = code => evt => {\n    // turn on/off this code in the list\n    const list = codelistFromText(props.record.treatment);\n    const thiscode = _.findIndex(list,c=>c.code===code);\n    if (thiscode<0) return;\n    list[thiscode].on = !list[thiscode].on;\n    props.changeRecord({ treatment: textFromCodelist(list) });\n  };\n\n  const recentCodesFromRecords = () => {\n    const sorted = _.reverse(_.sortBy(props.treatmentRecords,[ r => r.date, r => r.dateLastActivity ]));\n    return _.reduce(sorted,(acc,r) => {\n      if (acc.length >= 5) return acc; // only get 5 most recent\n      if (_.includes(acc,r.treatment)) return acc;\n      acc.push(r.treatment);\n      return acc;\n    },[]);\n  }\n  const recentTreatmentClicked = t => evt => props.changeRecord({treatment: t});\n\n  const treatmentEditorDoneClicked = evt => props.hideTreatmentEditor();\n  const codesOn = _.keyBy(codelistFromText(props.record.treatment),c=>c.code);\n  const recent = recentCodesFromRecords();\n  return (\n    <div className='treatmentEditor'>\n      \n      <input className='treatmentEditorTextInput'\n             type='text'\n             value={props.record.treatment}\n             onChange={treatmentTextChanged} />\n\n      <div className='treatmentCodesList'>\n        {_.map(props.treatmentCodes, (c,i) => \n          <div className={'treatmentCodeButton ' + (codesOn[c.code].on ? 'codeOn' : 'codeOff')}\n               key={'treatmentCodeButton'+i}\n               onClick={treatmentCodeButtonClicked(c.code)}>\n            <div className='treatmentCodeButtonCode'>\n              {c.code}\n            </div>\n            <div className='treatmentCodeButtonName'>\n              {c.name}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className='recentTreatmentsList'>\n        <div className='recentText'>Recent: </div>\n        {_.map(recent, (t,i) =>\n          <div className='recentTreatmentsButton'\n               key={'recentTreatments'+i}\n               onClick={recentTreatmentClicked(t)}>\n            {t}\n          </div>\n        )}\n      </div>\n\n      <div className='treatmentEditorDoneButton'\n           onClick={treatmentEditorDoneClicked}>\n        Done\n      </div>\n\n    </div>\n  );\n\n});\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport TagPane from './TagPane';\nimport RecordInput from './RecordInput';\nimport TreatmentEditor from './TreatmentEditor';\n\nimport './App.css';\n\nexport default connect({\n  treatmentEditorActive: state`treatmentEditorActive`,\n             windowSize: state`windowSize`,\n                 trello: state`trello`,\n        historySelector: state`historySelector`,\n  init: sequences`init`,\n}, class App extends React.Component {\n\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    const dir = this.props.windowSize.orientation === 'landscape' ? 'row' : 'column';\n    const active = this.props.historySelector.active;\n\n    if (this.props.treatmentEditorActive) {\n      return (\n        <div className=\"App\" style={{ flexDirection: 'column' }} >\n          <TreatmentEditor />\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\" style={{ flexDirection: dir }}>\n        <TagPane />\n        {active === 'group' || active === 'time' ? '' : \n          <RecordInput />\n        }\n      </div>\n    );\n  }\n\n});\n","import _classCallCheck from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { CerebralError } from 'cerebral';\nexport var TrelloSaveError =\n/*#__PURE__*/\nfunction (_CerebralError) {\n  _inherits(TrelloSaveError, _CerebralError);\n\n  function TrelloSaveError() {\n    _classCallCheck(this, TrelloSaveError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloSaveError).apply(this, arguments));\n  }\n\n  return TrelloSaveError;\n}(CerebralError);\n;\nexport var TrelloGetError =\n/*#__PURE__*/\nfunction (_CerebralError2) {\n  _inherits(TrelloGetError, _CerebralError2);\n\n  function TrelloGetError() {\n    _classCallCheck(this, TrelloGetError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloGetError).apply(this, arguments));\n  }\n\n  return TrelloGetError;\n}(CerebralError);\n;\nexport var TrelloAuthorizeError =\n/*#__PURE__*/\nfunction (_CerebralError3) {\n  _inherits(TrelloAuthorizeError, _CerebralError3);\n\n  function TrelloAuthorizeError() {\n    _classCallCheck(this, TrelloAuthorizeError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloAuthorizeError).apply(this, arguments));\n  }\n\n  return TrelloAuthorizeError;\n}(CerebralError);\n;","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"trello.lists\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"trello.lists.\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"trello.authorized\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"trello.authorized\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport _ from 'lodash';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { set } from 'cerebral/factories';\nimport Promise from 'bluebird';\nimport * as errors from './errors';\nvar CARD_FIELDS = 'name,id,closed,desc,dateLastActivity,labels,idList'; // For some reason cerebral seems to trigger these dumb warnings\n\nPromise.config({\n  // Enables all warnings except forgotten return statements.\n  warnings: {\n    wForgottenReturn: false\n  }\n}); //-----------------------------------------------\n// authorize and deauthorize\n\nexport var authorize = [function (_ref) {\n  var trello = _ref.trello;\n  return trello.authorize().catch(function (e) {\n    e.message = 'Failed to authorize trello: ' + e.message + JSON.stringify(e.stack);\n    throw new errors.TrelloAuthorizeError(e);\n  });\n}, set(state(_templateObject()), true)];\nexport var deauthorize = [set(state(_templateObject2()), false), sequence('deauthorize->authorize', authorize)]; //-----------------------------------------------------------\n// loadList sequence: given a board and list name in props, \n// load it into the state from Trello\n// props = { boardName, listName, key } the list's data will be put at trello.lists.<key>\n// We will keep a promise for each board/list that we need to verify exists\n// in order to prevent simulataneous accesses from creating duplicate boards/lists\n// when they see that a board doesn't exist yet.\n\nvar initialized = {\n  boards: {},\n  lists: {}\n};\nexport var loadList = sequence('trello.loadList', [function (_ref2) {\n  var props = _ref2.props,\n      trello = _ref2.trello;\n  var ret = {}; // First get the board\n\n  return Promise.try(function () {\n    if (initialized.boards[props.boardName]) return initialized.boards[props.boardName]; // if this is a promise, then someone else is initializing or it's done already\n    // Start by getting board, create if doesn't exist, save promise in \"initialized\":\n\n    return initialized.boards[props.boardName] = trello.get('members/me/boards', {\n      fields: 'name,id,closed'\n    }).filter(function (b) {\n      return b && !b.closed;\n    }).then(function (result) {\n      var board = _.find(result, function (b) {\n        return b.name === props.boardName;\n      });\n\n      if (board) return board;\n      console.log('Could not find board ' + props.boardName + ', creating it.');\n      return trello.post('boards', {\n        name: props.boardName\n      }); // the result of this call is the board object itself\n    });\n  }).then(function (board) {\n    ret.board = board;\n  }) // Then get the labels:\n  .then(function () {\n    return trello.get(\"boards/\".concat(ret.board.id, \"/labels\"), {\n      fields: 'id,name,color'\n    });\n  }).then(function (labels) {\n    ret.labels = labels;\n  }) // Then get the list info:\n  .then(function () {\n    if (initialized.lists[props.listName]) return initialized.lists[props.listName];\n    return initialized.lists[props.listName] = trello.get(\"boards/\".concat(ret.board.id, \"/lists\"), {\n      fields: 'name,id,closed,cards'\n    }).filter(function (l) {\n      return l && !l.closed;\n    }).then(function (result) {\n      var list = _.find(result, function (l) {\n        return l.name === props.listName;\n      });\n\n      if (list) return list;\n      console.log('Could not find list ' + props.listName + ', creating it.');\n      return trello.post(\"boards/\".concat(ret.board.id, \"/lists\"), {\n        name: props.listName\n      }); // resolves to the list object itself\n    });\n  }).then(function (list) {\n    ret.list = list;\n  }) // Now setup the final return statement and catch:\n  .then(function () {\n    return ret;\n  }).catch(function (error) {\n    error.message = 'Failed to get list ' + props.listName + ': ' + error.message;\n    throw new errors.TrelloGetError(error);\n  });\n}, // Now get the cards for this list:\nfunction (_ref3) {\n  var props = _ref3.props,\n      trello = _ref3.trello;\n  return trello.get('lists/' + props.list.id + '/cards', {\n    fields: CARD_FIELDS\n  }).filter(function (c) {\n    return c && !c.closed;\n  }) // Save the state path for this card inside the card itself so we can easily update later\n  .then(function (cards) {\n    return _.keyBy(_.map(cards, function (c) {\n      c.statePath = \"trello.lists.\".concat(props.key, \".\").concat(c.id);\n      return c;\n    }), function (c) {\n      return c.id;\n    });\n  }).then(function (result) {\n    return {\n      cards: result\n    };\n  }).catch(function (error) {\n    error.message = 'Failed to get cards for list ' + props.listName + ': ' + error.message;\n    throw new errors.TrelloGetError(error);\n  });\n}, // Put everything into state:\nfunction (_ref4) {\n  var props = _ref4.props,\n      store = _ref4.store,\n      get = _ref4.get;\n  store.set(state(_templateObject3(), props.key), {\n    id: props.list.id,\n    name: props.list.name,\n    cards: props.cards,\n    board: props.board,\n    labels: props.labels\n  });\n}]); // All this does is refresh the card object in-place.  It does not check that\n// it is still in the same board.\n\nexport var reloadOneCard = sequence('trello.reloadOneCard', [function (_ref5) {\n  var trello = _ref5.trello,\n      props = _ref5.props,\n      store = _ref5.store,\n      get = _ref5.get;\n  if (!props.card || !props.card.id) return;\n  return trello.get(\"cards/\".concat(props.card.id), {\n    fields: CARD_FIELDS\n  }).then(function (card) {\n    // Find the original place in Trello part of the state:\n    var lists = get(state(_templateObject4()));\n\n    var list = _.find(lists, function (list, listname) {\n      return list.id === card.idList;\n    });\n\n    var statePath = \"trello.lists.\".concat(list.name.toLowerCase(), \".cards.\").concat(card.id); // Now change it in the state:\n\n    card.statePath = statePath;\n    store.set(state(_templateObject5(), statePath), card);\n    return {\n      card: card\n    };\n  });\n}]); // props.card = {\n//   id: 'only use if this card already exists',\n//   name: 'the name to put',\n//   idList: 'id of list for card, required no matter what',\n// }\n\nexport var putCard = sequence('trello.putCard', [function (_ref6) {\n  var trello = _ref6.trello,\n      props = _ref6.props;\n  return Promise.try(function () {\n    var url = 'cards/';\n\n    if (!props.card.id) {\n      // card does not exist, do a post\n      return trello.post(url, {\n        name: props.card.name,\n        idList: props.card.idList\n      });\n    }\n\n    url += props.card.id + '/'; // card already exists, do a put to that card\n\n    return trello.put(url, {\n      name: props.card.name,\n      idList: props.card.idList\n    });\n  }).catch(function (err) {\n    throw new errors.TrelloSaveError('Failed to save to card', err);\n  });\n}, reloadOneCard]); // props.id, props.idLabel\n\nexport var addLabelToCard = sequence('trello.addLabelToCard', [function (_ref7) {\n  var trello = _ref7.trello,\n      props = _ref7.props;\n  trello.post(\"cards/\".concat(props.card.id, \"/idLabels\"), {\n    value: props.idLabel\n  });\n}, // Get the board name that goes with this card\nreloadOneCard]);","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"treatments.treatmentCodes\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"treatments.colors\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"treatments.tagIndex\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"trello.lists.treatments.id\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { set } from 'cerebral/operators';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { tagStrToObj, tagObjToStr, groupForTag } from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------\n// save one treatment\n\nexport var saveTreatment = [// find existing card that matches this date and treatment (if it exists):\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n  var ret = false;\n  var records = get(state(_templateObject()));\n\n  var existing = _.find(records, function (r) {\n    return r.date === props.record.date && r.treatment === props.record.treatment;\n  });\n\n  if (!existing) {\n    ret = _.cloneDeep(props.record);\n    ret.tags = [ret.tag];\n    return {\n      record: ret\n    }; // existing record is fine as-is in props, just needed array of tags instead of just one\n  } // Otherwise, check if this tag is already in the list:\n\n\n  var alreadyInList = _.find(existing.tags, function (t) {\n    return props.record.tag.color === t.color && props.record.tag.number === t.number;\n  });\n\n  if (alreadyInList) return {\n    record: existing\n  }; // replace record in props with existing record\n  // Otherwise, add record to the list of existing tags since it's not already there\n\n  ret = _.cloneDeep(existing);\n  ret.tags.push(props.record.tag); // replace record in props with this new one:\n\n  return {\n    record: ret\n  };\n}, // convert record to card\nfunction (_ref2) {\n  var props = _ref2.props,\n      store = _ref2.store,\n      get = _ref2.get;\n  return {\n    card: {\n      id: props.record.id,\n      idList: props.record.idList || get(state(_templateObject2())),\n      name: props.record.date + ': ' + props.record.treatment + ': ' + _.join(_.map(props.record.tags, function (t) {\n        return t.color + t.number;\n      }), ' ')\n    }\n  };\n}, // Put the card to trello:\ntrello.putCard]; //---------------------------------------------------------------------\n// fetch all treatment records:\n\nvar treatmentCardToRecord = function treatmentCardToRecord(c) {\n  if (!c) return null;\n  var name = c.name;\n  var datematches = name.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}):(.*)$/);\n  if (!datematches || datematches.length < 3) return null;\n  var date = datematches[1].trim();\n  var rest = datematches[2].trim();\n  var treatmentmatches = rest.match(/^(.+):(.*)$/);\n  if (!treatmentmatches || treatmentmatches.length < 3) return null;\n  var treatment = treatmentmatches[1].trim();\n  rest = treatmentmatches[2].trim();\n\n  var tags = _.map(_.split(rest, ' '), tagStrToObj);\n\n  return {\n    date: date,\n    treatment: treatment,\n    tags: tags,\n    id: c.id,\n    idList: c.idList,\n    cardName: c.name,\n    dateLastActivity: c.dateLastActivity\n  };\n};\n\nexport var fetch = sequence('treatments.fetch', [// get the cards\nfunction () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Treatments',\n    key: 'treatments'\n  };\n}, trello.loadList, // convert all props.cards to records:\nfunction (_ref3) {\n  var props = _ref3.props,\n      store = _ref3.store;\n  return store.set(state(_templateObject3()), _.map(props.cards, treatmentCardToRecord));\n}, // compute the tagIndex as { <tag>: { <groupname>: { group: {}, treatments: [ ] } }\nfunction (_ref4) {\n  var props = _ref4.props,\n      get = _ref4.get,\n      store = _ref4.store;\n  var incoming = get(state(_templateObject4()));\n  var records = get(state(_templateObject5()));\n\n  var tagIndex = _.reduce(records, function (acc, r) {\n    if (!r.tags) return acc;\n\n    _.each(r.tags, function (t) {\n      var str = tagObjToStr(t);\n      var g = groupForTag(incoming, t, r.date);\n      if (!g) g = {\n        groupname: \"NONE\"\n      }; // early tags have no group\n\n      if (!acc[str]) acc[str] = {};\n      if (!acc[str][g.groupname]) acc[str][g.groupname] = {\n        group: g,\n        treatments: []\n      };\n      acc[str][g.groupname].treatments.push({\n        date: r.date,\n        treatment: r.treatment\n      });\n    });\n\n    return acc;\n  }, {});\n\n  store.set(state(_templateObject6()), tagIndex);\n}]); //---------------------------------------------------------------------\n// fetch the config cards (colors, treatmentCodes)\n\nvar colorsCardToRecord = function colorsCardToRecord(c) {\n  return c ? JSON.parse(c.desc) : null;\n};\n\nvar codesCardToRecord = function codesCardToRecord(c) {\n  return c ? JSON.parse(c.desc) : null;\n};\n\nexport var fetchConfig = sequence('treatments.fetchConfig', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Config',\n    key: 'livestockConfig'\n  };\n}, // get the colors and codes cards:\ntrello.loadList, // save colors in state:\nsequence('saveColors', [function (_ref5) {\n  var props = _ref5.props,\n      store = _ref5.store;\n  return store.set(state(_templateObject7()), colorsCardToRecord(_.find(props.cards, function (c) {\n    return c.name === 'Tag Colors';\n  })));\n}]), // save treatment codes in state:\nsequence('saveCodes', [function (_ref6) {\n  var props = _ref6.props,\n      store = _ref6.store;\n  return store.set(state(_templateObject8()), codesCardToRecord(_.find(props.cards, function (c) {\n    return c.name === 'Treatment Types';\n  })));\n}])]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    treatmentCodes: [{\n      \"code\": \"Z\",\n      \"name\": \"Zuprevo\"\n    }, {\n      \"code\": \"Za\",\n      \"name\": \"Zactran\"\n    }, {\n      \"code\": \"Dr\",\n      \"name\": \"Draxxin\"\n    }, {\n      \"code\": \"N\",\n      \"name\": \"Nuflor\"\n    }, {\n      \"code\": \"No\",\n      \"name\": \"Noromycin\"\n    }, {\n      \"code\": \"P\",\n      \"name\": \"Pennicillin\"\n    }, {\n      \"code\": \"Px\",\n      \"name\": \"Polyflex\"\n    }, {\n      \"code\": \"By\",\n      \"name\": \"Baytril\"\n    }, {\n      \"code\": \"Ex\",\n      \"name\": \"Excenel\"\n    }, {\n      \"code\": \"S\",\n      \"name\": \"Sulfa\"\n    }, {\n      \"code\": \"D\",\n      \"name\": \"Dex\"\n    }, {\n      \"code\": \"E\",\n      \"name\": \"Electrolytes\"\n    }, {\n      \"code\": \"Ht\",\n      \"name\": \"High Temp\"\n    }, {\n      \"code\": \"Lt\",\n      \"name\": \"Low Temp\"\n    }, {\n      \"code\": \"Nt\",\n      \"name\": \"No Temp\"\n    }],\n    colors: {\n      \"ORANGE\": \"#FF9900\",\n      \"YELLOW\": \"#E9E602\",\n      \"MARTYELL\": \"#FF00FF\",\n      \"BLACK\": \"#000000\",\n      \"RED\": \"#FF0000\",\n      \"WHITE\": \"#FFFFFF\"\n    },\n    records: [// {\n      //   date: 2018-03-17,\n      //   treatment: 'DrExHt',\n      //   tags: [\n      //     { number: 123, color: 'ORANGE' }\n      //   ]\n      // },\n    ]\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"incoming.records.\", \".dead\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport _ from 'lodash';\nimport { set } from 'cerebral/factories';\nimport { sequence, state, CerebralError } from 'cerebral';\nimport { tagStrToObj, groupForTag\n/*rangeContainsTag*/\n} from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------------\n// fetch all incoming records:\n\nvar incomingCardToRecord = function incomingCardToRecord(c) {\n  if (!c) return null;\n  var name = c.name;\n  var matches = name.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}):? *([^;]+);(.*)$/);\n  var ret = {};\n  ret.date = matches[1];\n  ret.groupname = matches[2];\n  var rest = matches[3];\n  var parts = rest.split(';');\n\n  _.each(parts, function (p) {\n    var _p$trim$split = p.trim().split(':'),\n        _p$trim$split2 = _slicedToArray(_p$trim$split, 2),\n        propname = _p$trim$split2[0],\n        propval = _p$trim$split2[1];\n\n    ret[propname.toLowerCase().trim()] = propval.trim();\n  }); // If there are tag range(s), parse that out as well\n\n\n  if (ret.tags) {\n    ret.tags = ret.tags.replace(/ /g, ''); // get rid of any spaces\n\n    ret.tag_ranges = _.reduce(ret.tags.split(','), function (acc, r) {\n      // each range turns into 1 or 2 objects depending on color split\n      var _$map = _.map(r.split('-'), tagStrToObj),\n          _$map2 = _slicedToArray(_$map, 2),\n          start = _$map2[0],\n          end = _$map2[1]; // map start and end into objects\n\n\n      if (start.color !== end.color) {\n        acc.push({\n          start: start,\n          end: {\n            color: start.color,\n            number: 1000\n          }\n        });\n        acc.push({\n          start: {\n            color: end.color,\n            number: 1\n          },\n          end: end\n        });\n        return acc;\n      }\n\n      acc.push({\n        start: start,\n        end: end\n      });\n      return acc;\n    }, []);\n  }\n\n  ret.id = c.id;\n  ret.idList = c.idList;\n  ret.cardName = c.name;\n  ret.dateLastActivity = c.dateLastActivity;\n  return ret;\n};\n\nexport var fetch = sequence('incoming.fetch', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Incoming',\n    key: 'incoming'\n  };\n}, // get the cards\ntrello.loadList, // convert all props.cards to records:\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store;\n  return store.set(state(_templateObject()), _.map(props.cards, incomingCardToRecord));\n}]);\nexport var computeStats = sequence('incoming.computeStats', [function (_ref2) {\n  var get = _ref2.get,\n      store = _ref2.store;\n  // check if we have both dead and incoming records:\n  var deadrecords = get(state(_templateObject2()));\n  var incoming = get(state(_templateObject3())); // group all deads into the appropriate incoming group, keyed by groupname\n\n  var groupdeads = _.reduce(deadrecords, function (acc, d) {\n    if (!d.tags) console.log('incoming.computeStats: WARNING: dead record has no tags.  Card name = ', d.cardName);\n\n    _.each(d.tags, function (t) {\n      var g = groupForTag(incoming, t, d.date);\n      if (!g) return; // this is likely an old tag that has no known group, or a notag\n\n      if (!acc[g.groupname]) acc[g.groupname] = [];\n      acc[g.groupname].push({\n        date: d.date,\n        tag: t\n      });\n    });\n\n    return acc;\n  }, {}); // walk through all incoming records and add a \"dead\" key with the list of dead\n\n\n  _.each(incoming, function (g, index) {\n    store.set(state(_templateObject4(), index), groupdeads[g.groupname] || []);\n  });\n}]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    records: [// {\n      //   date: 2018-03-17,\n      //   groupname: 'MICH:MAR18-1',\n      //   weight: '274.35',\n      //   head: 250,\n      //   tags: [ \n      //     { \n      //       start: { number: 123, color: 'ORANGE' }, // NOTE: a color split will\n      //       end: { number: 372, color: 'ORANGE' },   // show up as multiple ranges\n      //     },\n      //   ],\n      //   id: 'kf2jlk', // ID of card\n      //   idList: '29ifjkl', // ID of Incoming list in Trello\n      //   cardName: '2018-03-17: MICH:MAR18-1; Head: 250; Weight: 274.35; Tags: ORANGE123-ORANGE372;',\n      // },\n    ]\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"trello.lists.dead.id\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"dead.tagIndex.\", \"\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"dead.tagIndex.\", \"\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"incoming\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"dead.records.\", \"\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"dead.tagIndex\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"dead.errors\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { set } from 'cerebral/factories';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { tagStrToObj, tagObjToStr, groupForTag } from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------------\n// fetch all dead records:\n\nvar deadCardToRecord = function deadCardToRecord(c) {\n  try {\n    if (!c) return null;\n    var name = c.name;\n    var matches = name.match(/^([0-9]{4}-[0-9]{1,2}-[0-9]{1,2}):?(.*)$/);\n    var day = matches[1];\n    var tags_and_pens_str = matches[2]; // Save the note if there is one:\n\n    matches = tags_and_pens_str.match(/[Nn][Oo][Tt][Ee]:(.*)$/);\n    var note = false;\n    if (matches) note = matches[1]; // Ditch anything in parentheses:\n\n    tags_and_pens_str = tags_and_pens_str.replace(/\\(.*\\)/g, ''); //    let tags_and_pens = tags_and_pens_str.match(/([A-Za-z']+ ?([0-9]+)?)/g);\n\n    var tags_and_pens = tags_and_pens_str.match(/(([A-Z]+:[A-Z]{3}[0-9]{2}-[A-Z0-9]:)?[A-Za-z']+ ?([0-9]+)?)/g);\n    tags_and_pens = _.map(tags_and_pens, function (tp) {\n      return tp.trim();\n    });\n    tags_and_pens = _.map(tags_and_pens, function (tp) {\n      return tp === 'NT' ? 'NOTAG1' : tp;\n    }); // eliminate everything that isn't just tags\n\n    var tags = _.filter(tags_and_pens, function (t) {\n      return !t.match(/^[NSB][0-9S]{1,2}$/i) && // N1, NS, S1, B3\n      !t.match(/^OB[SN]?[NS]?$/) && // OBS, OBN, OB, OBNS\n      !t.match(/^HB$/i) && !t.match(/^HEIFER$/i) && !t.match(/^DRY( ?(LOT|COW))?$/i) && !t.match(/^DAIRY$/i) && !t.match(/^APRIL'?S?$/i) && !t.match(/^WOODS$/i) && !t.match(/^BARN ?[1-3]$/i) && !t.match(/^dead/i) && !t.match(/^total/i) && !t.match(/^and/i);\n    }); // fixup bad tags:\n\n\n    tags = _.map(tags, function (t) {\n      return t.toUpperCase().replace(/ /g, '');\n    });\n    tags = _.map(tags, function (t) {\n      return t === 'NOTAG' ? 'NOTAG1' : t;\n    }); // parse all the tag strings into tag objects\n\n    tags = _.map(tags, tagStrToObj);\n    return {\n      date: day,\n      tags: tags,\n      note: note,\n      id: c.id,\n      idList: c.idList,\n      cardName: c.name,\n      dateLastActivity: c.dateLastActivity\n    }; // If anything goes wrong, just put an error record here:\n  } catch (err) {\n    return {\n      cardName: c.name,\n      idList: c.idList,\n      id: c.id,\n      error: err.toString()\n    };\n  }\n};\n\nexport var fetch = sequence('dead.fetch', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Dead',\n    key: 'dead'\n  };\n}, // get the cards\ntrello.loadList, // convert all props.cards to records or errors:\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n\n  var _$reduce = _.reduce(props.cards, function (acc, c) {\n    var r = deadCardToRecord(_.cloneDeep(c));\n    if (r.error) acc.errors.push(r);else acc.records.push(r);\n    return acc;\n  }, {\n    errors: [],\n    records: []\n  }),\n      errors = _$reduce.errors,\n      records = _$reduce.records;\n\n  store.set(state(_templateObject()), records);\n  store.set(state(_templateObject2()), errors); // re-index all dead records as { tagstr: { groupname: date } }\n\n  var incoming = get(state(_templateObject3()));\n\n  var tagIndex = _.reduce(records, function (acc, r) {\n    if (!r.tags) return acc;\n\n    _.each(r.tags, function (t) {\n      var str = tagObjToStr(t);\n      var g = groupForTag(incoming, t, r.date);\n      if (!g) g = {\n        groupname: \"NONE\"\n      }; // early tags have no group\n\n      if (!acc[str]) acc[str] = {};\n      acc[str][g.groupname] = r.date;\n    });\n\n    return acc;\n  }, {});\n\n  store.set(state(_templateObject4()), tagIndex);\n}]);\nvar reloadOneRecord = sequence('dead.reloadOneRecord', [function (_ref2) {\n  var props = _ref2.props,\n      store = _ref2.store,\n      get = _ref2.get;\n  // re-process the card into a record, overwrite the previous record.  If it was\n  // a new card, it will get appended to the records list.\n  var records = get(state(_templateObject5()));\n\n  var recordIndex = _.findIndex(records, function (r) {\n    return r.id === props.card.id;\n  });\n\n  var refreshedRecord = deadCardToRecord(props.card);\n\n  if (recordIndex >= 0) {\n    // found it, replace it:\n    store.set(state(_templateObject6(), recordIndex), refreshedRecord);\n  } else {\n    // did not find it, push onto end:\n    store.push(state(_templateObject7()), refreshedRecord);\n  } // Update the tagindex if necessary\n\n\n  var incoming = get(state(_templateObject8()));\n\n  _.each(refreshedRecord.tags, function (t) {\n    var str = tagObjToStr(t);\n    var g = groupForTag(incoming, t, refreshedRecord.date);\n    if (!g) g = {\n      groupname: \"NONE\"\n    }; // early tags have no group\n\n    var previous = _.clone(get(state(_templateObject9(), str)));\n\n    var newone = _.clone(previous) || {};\n    newone[g.groupname] = refreshedRecord.date;\n    store.set(state(_templateObject10(), str), newone);\n  });\n\n  return {\n    record: refreshedRecord\n  };\n}]);\nexport var saveDead = sequence('dead.saveDead', [// Check if this tag is already in any of the days 14 before or after date\n// in order to prevent duplicates:\nfunction (_ref3) {\n  var props = _ref3.props,\n      store = _ref3.store,\n      get = _ref3.get;\n  var records = get(state(_templateObject11()));\n  var start = moment(props.record.date, 'YYYY-MM-DD').subtract(14, 'days');\n  var end = moment(props.record.date, 'YYYY-MM-DD').add(14, 'days');\n\n  var alreadyDead = _.find(records, function (r) {\n    var d = moment(r.date, 'YYYY-MM-DD'); // Not within date range?\n\n    if (!start.isBefore(d) || !end.isAfter(d)) return false; // Tag not already in list?\n\n    if (!_.find(r.tags, function (t) {\n      return t.color === props.record.tag.color && t.number === props.record.tag.number;\n    })) return false; // In date range and tag already in list\n\n    return true;\n  });\n\n  if (alreadyDead) {\n    return {\n      alreadyDead: true\n    };\n  }\n}, // Find existing card for this date if there is one\nfunction (_ref4) {\n  var props = _ref4.props,\n      store = _ref4.store,\n      get = _ref4.get;\n  if (props.alreadyDead) return;\n  var ret = false;\n  var records = get(state(_templateObject12()));\n\n  var existingDate = _.find(records, function (r) {\n    return r.date === props.record.date;\n  }); // If there isn't one, just update record to have \"tags\" as array rather than one tag\n\n\n  if (!existingDate) {\n    ret = _.cloneDeep(props.record);\n    ret.tags = [ret.tag];\n    return {\n      record: ret\n    };\n  } // Otherwise, there is an existing card for this date, add the tag to its list:\n\n\n  ret = _.cloneDeep(existingDate);\n  ret.tags.push(props.record.tag);\n  return {\n    record: ret\n  };\n}, // convert record to card\nfunction (_ref5) {\n  var props = _ref5.props,\n      store = _ref5.store,\n      get = _ref5.get;\n  var card = props.record.card || {};\n  card.id = props.record.id;\n  card.idList = props.record.idList || get(state(_templateObject13())), card.name = props.record.date + ': ' + _.join(_.map(props.record.tags, tagObjToStr), ' ') + (props.record.note ? 'Note: ' + props.record.note : '');\n  return {\n    card: card\n  };\n}, // Put the card to Trello, this reloads that one card into state from Trello afterward\ntrello.putCard, // Re-process the card into it's approriate record:\nreloadOneRecord]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    tagIndex: {},\n    records: [// {\n      //   date: 2018-03-17,\n      //   tags: [ { number: 123, color: 'ORANGE' }],\n      //   id: '02kjlwfj0f23',                // ID of the card\n      //   idList: '2fj0ijosdf',              // ID of the dead list\n      //   cardName: '2018-03-17: ORANGE123', // original card, for debugging\n      //   dateLastActivity: '2018-03-17',    // for sorting by \"recent\"-ness\n      // },\n    ]\n  }\n};","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    authorized: false,\n    lists: {// feed: {\n      //   name: 'Feed Delivered'\n      //   id: 'kdj20fi32jld',\n      //   cards: { ... },  // the regular trello list of cards\n      // }\n    }\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"windowSize.isSmall\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"windowSize.isSmall\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"windowSize.orientation\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"windowSize.orientation\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { state, sequence } from 'cerebral';\nexport var resized = sequence('windowSize.resized', [function (_ref) {\n  var windowSize = _ref.windowSize,\n      props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n\n  if (get(state(_templateObject())) !== windowSize.orientation()) {\n    store.set(state(_templateObject2()), windowSize.orientation());\n  }\n\n  var isSmall = windowSize.orientation() === 'portrait' ? props.width < 767 : props.height < 500;\n  if (get(state(_templateObject3())) !== isSmall) store.set(state(_templateObject4()), isSmall);\n}]);\nexport var init = sequence('windowSize.init', [function (_ref2) {\n  var windowSize = _ref2.windowSize;\n  return windowSize.init('windowSize.resized');\n}, // registers event listener for window resize events\nresized]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    isSmall: true,\n    // changes to true for mobile, false for computer\n    orientation: 'portrait' // portrait | landscape\n\n  }\n};","import _classCallCheck from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Provider, CerebralError } from 'cerebral';\nimport Promise from 'bluebird';\nexport var TrelloClientLoadError =\n/*#__PURE__*/\nfunction (_CerebralError) {\n  _inherits(TrelloClientLoadError, _CerebralError);\n\n  function TrelloClientLoadError() {\n    _classCallCheck(this, TrelloClientLoadError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloClientLoadError).apply(this, arguments));\n  }\n\n  return TrelloClientLoadError;\n}(CerebralError);\n; // dev key: 3ad06cb25802014a3f24f479e886771c\n// URL to refresh client lib: https://api.trello.com/1/client.js?key=3ad06cb25802014a3f24f479e886771c\n\nvar waitUntilLoaded = function waitUntilLoaded() {\n  return Promise.try(function () {\n    var count = 0;\n\n    var check = function check() {\n      if (window.Trello) return true;\n      if (count++ > 50) throw TrelloClientLoadError('Could not load Trello client library');\n      return Promise.delay(250).then(check);\n    };\n\n    return Promise.try(check);\n  });\n}; // Promisify the normal Trello client:\n\n\nexport default Provider({\n  //-------------------------------------------------\n  // call authorize first before any other functions in this provider:\n  authorize: function authorize() {\n    return waitUntilLoaded().then(function () {\n      return new Promise(function (resolve, reject) {\n        window.Trello.authorize({\n          type: 'redirect',\n          name: 'Ault Farms - Invoices',\n          persist: true,\n          scope: {\n            read: 'true',\n            write: 'true'\n          },\n          expiration: 'never',\n          success: resolve,\n          error: function error(err) {\n            console.log('Failed to authorize Trello: err = ', err);\n            reject(err);\n          }\n        });\n        return null;\n      });\n    });\n  },\n  deauthorize: function deauthorize() {\n    return new Promise(function (resolve, reject) {\n      window.Trello.deauthorize();\n      resolve();\n    });\n  },\n  get: function get(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.get(path, params || {}, resolve, function (err) {\n        console.log('Trello.get ERROR: ', err);\n        reject(err);\n      });\n    });\n  },\n  put: function put(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.put(path, params, resolve, function (err) {\n        console.log('Trello.put ERROR: ', err);\n        reject(err);\n      });\n    });\n  },\n  post: function post(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.post(path, params, resolve, function (err) {\n        console.log('Trello.post ERROR: ', err);\n        reject(err);\n      });\n    });\n  }\n});","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { sequences } from 'cerebral';\n\nvar _dimensions = function dimensions() {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n};\n\nvar seq = '';\nvar _M = {\n  dimensions: function dimensions() {\n    return _dimensions();\n  },\n  orientation: function orientation() {\n    var d = _dimensions();\n\n    return d.width > d.height ? 'landscape' : 'portrait';\n  },\n  windowResized: function windowResized() {\n    this.context.get(sequences(_templateObject(), seq))(_dimensions());\n  },\n  init: function init(sequencepath) {\n    seq = sequencepath;\n    window.addEventListener('resize', _M.windowResized.bind(this)); // compute it the first time:\n\n    this.context.get(sequences(_templateObject2(), sequencepath))(_dimensions());\n  }\n};\nexport default _M;","import { set } from 'cerebral/factories';\nimport { state,props } from 'cerebral/tags';\nimport { sequence, parallel } from 'cerebral';\n\nimport * as treatments from 'aultfarms-lib/treatments/module/sequences';\nimport * as incoming   from 'aultfarms-lib/incoming/module/sequences';\nimport * as dead       from 'aultfarms-lib/dead/module/sequences';\nimport * as trello     from 'aultfarms-lib/trello/module/sequences';\nimport * as windowSize from 'aultfarms-lib/windowSize/module/sequences';\n\nexport const updateMsg = sequence('updateMsg', [\n  ({props,get,store}) => {\n    if (props.msg) return state.set('msg', props.msg);\n    if (!get(state`trello.authorized`)) \n      return store.set(state`msg`, { type: 'bad', text: 'You are not logged in to Trello.' });\n    if (get(state`record.is_saved`)) \n      return store.set(state`msg`, { type: 'good', text: 'Treatment record saved.'});\n    store.set(state`msg`, { type: 'bad', text: 'Treatment record not saved'});\n  },\n]);\n\nexport const showTreatmentEditor = sequence('app.showTreatmentEditor', [ \n  set(state`treatmentEditorActive`,true)  \n]);\nexport const hideTreatmentEditor = sequence('app.hideTreatmentEditor', [ \n  set(state`treatmentEditorActive`,false) \n]);\n\nexport const historySelectionChangeRequested = sequence('app.historySelectionChangeRequested', [ \n  set(state`historySelector.active`, props`active`), \n]);\nexport const historyGroupSortClicked = sequence('app.historyGroupSortClicked', [ \n  set(state`historyGroup.sort`, props`sort`) \n]);\n\nexport const changeRecord = sequence('app.changeRecord', [ \n  ({props,store,get}) => {\n    // Only the first time that the is_saved gets set to false, automatically\n    // switch the Date/Tag pane to Tag since we're typing a tag now.\n    if (get(state`record.is_saved`) && !props.date) store.set(state`historySelector.active`, 'tag');\n    // if they are changing a record that has already been saved, go ahead and clear out\n    // the textbox for them\n    if (props.date)                    store.set(state`record.date`, props.date);\n    if (props.treatment)               store.set(state`record.treatment`, props.treatment);\n    if (props.tag && typeof props.tag.color === 'string') {\n      store.set(state`record.tag.color`, props.tag.color);\n      if (props.tag.color === 'NOTAG') store.set(state`record.tag.number`,'1');\n    }\n    if (props.tag && (typeof props.tag.number === 'string' || typeof props.tag.number === 'number')) {\n      store.set(state`record.tag.number`, +(props.tag.number));\n    }\n    if (!props.date) {\n      store.set(state`record.is_saved`, false);\n    }\n  },\n  updateMsg,\n]);\nexport const logout = sequence('app.logout', [ trello.deauthorize, trello.authorize]);\n\nexport const saveRecord = sequence('app.saveRecord', [ \n  set(props`record`, state`record`),\n  set(state`recordsValid`, false),\n  set(state`msg`, { type: 'good', text: 'Saving card...' }),\n  treatments.saveTreatment,\n  set(state`msg`, { type: 'good', text: 'Refreshing records...' }),\n  treatments.fetch,\n  set(state`recordsValid`, true),\n  set(state`record.is_saved`, true),\n  set(state`record.tag.number`, ''),\n  set(state`historySelector.active`, 'date'),\n  updateMsg,\n]);\n\nexport const init = sequence('app.init', [\n  windowSize.init,\n  set(state`msg`, { type: 'good', text: 'Checking trello authorization...' }),\n  trello.authorize,\n  set(state`msg`, { type: 'good', text: 'Fetching records...' }),\n  // dead and treatments need incoming first to compute tagIndex\n  incoming.fetch,\n  parallel('app.init.parallel', [\n    treatments.fetch,\n    treatments.fetchConfig,\n    dead.fetch,\n  ]),\n  set(state`msg`, { type: 'good', text: 'Computing stats...' }),\n  incoming.computeStats,\n  set(state`recordsValid`, true),\n  set(state`msg`, { type: 'good', text: 'Loaded successfully.'}),\n]);\n","import moment from 'moment';\nimport { set } from 'cerebral/factories';\nimport { state } from 'cerebral/tags';\n\n\nimport treatmentsModule from 'aultfarms-lib/treatments/module';\nimport   incomingModule from 'aultfarms-lib/incoming/module';\nimport       deadModule from 'aultfarms-lib/dead/module';\nimport     trelloModule from 'aultfarms-lib/trello/module';\nimport windowSizeModule from 'aultfarms-lib/windowSize/module';\n\nimport     trelloProvider from 'aultfarms-lib/trello/provider';\nimport windowSizeProvider from 'aultfarms-lib/windowSize/provider';\n\nimport * as trelloErrors from 'aultfarms-lib/trello/module/errors';\n\nimport * as sequences from './sequences';\n\nexport default {\n  sequences,\n  state: { \n    recordsValid: false,\n    treatmentEditorActive: false,\n    historySelector: {\n      active: 'date', // date/tag/group/dead\n    },\n    historyGroup: {\n      sort: 'date', // date/name/dead/perc\n    },\n\n    msg: {\n      type: 'bad',\n      text: 'Treatment record not saved.',\n    },\n\n    record: {\n      date: moment().format('YYYY-MM-DD'),\n      treatment: 'NoExHt',\n      tag: {\n        color: '',\n        number: 0,\n      },\n      is_saved: true,\n    },\n\n  },\n  modules: {\n    treatments: treatmentsModule,\n      incoming: incomingModule,\n          dead: deadModule,\n        trello: trelloModule,\n    windowSize: windowSizeModule,\n  },\n  providers: {\n        trello: trelloProvider,\n    windowSize: windowSizeProvider,\n  },\n  catch: [\n    [ trelloErrors.TrelloSaveError,      [ set(state`msg`, 'ERROR: failed to save in Trello')      ] ],\n    [ trelloErrors.TrelloGetError,       [ set(state`msg`, 'ERROR: failed to get in Trello')       ] ],\n    [ trelloErrors.TrelloAuthorizeError, [ set(state`msg`, 'ERROR: failed to authorize in Trello') ] ],\n  ],\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport App from './App';\nimport AppModule from './module';\n\nimport CerebralApp from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport devtools from 'cerebral/devtools';\n\nimport 'pure-css';\nimport './index.css';\n\nconst controller = CerebralApp(AppModule, {\n  devtools: process.env.NODE_ENV === 'production' ? null : devtools({host: 'localhost:8000', reconnect: true }),\n});\n\n\n// Render the root node:\nReactDOM.render(\n  <Container app={controller}>\n    <App />\n  </Container>, document.getElementById('root')\n);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}