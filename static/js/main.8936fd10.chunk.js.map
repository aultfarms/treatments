{"version":3,"sources":["registerServiceWorker.js","TagBar.js","Msg.js","TreatmentCard.js","HistoryDate.js","HistoryTag.js","../../../aultfarms-lib/src/util/tagHelpers.js","HistoryGroup.js","HistoryDead.js","Prefs.js","History.js","HistorySelector.js","TagPane.js","Keypad.js","Colorbar.js","TreatmentDateBar.js","RecordInput.js","TreatmentEditor.js","App.js","../../../aultfarms-lib/src/trello/module/errors.js","../../../aultfarms-lib/src/trello/module/sequences.js","../../../aultfarms-lib/src/treatments/module/sequences.js","../../../aultfarms-lib/src/treatments/module/index.js","../../../aultfarms-lib/src/incoming/module/sequences.js","../../../aultfarms-lib/src/incoming/module/index.js","../../../aultfarms-lib/src/dead/module/sequences.js","../../../aultfarms-lib/src/dead/module/index.js","../../../aultfarms-lib/src/trello/module/index.js","../../../aultfarms-lib/src/windowSize/module/sequences.js","../../../aultfarms-lib/src/windowSize/module/index.js","../../../aultfarms-lib/src/trello/provider/index.js","../../../aultfarms-lib/src/windowSize/provider/index.js","module/sequences.js","module/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","connect","record","colors","msg","changeRecord","sequences","props","color","tag","className","style","borderColor","is_saved","value","type","onChange","evt","preventDefault","target","number","text","tags","length","treatment","_","map","t","i","key","historySelector","treatmentRecords","recordsfordate","filter","r","date","reverse","sortBy","dateLastActivity","count","reduce","sum","clone","recordindex","recordsfortag","find","prevdays","days","moment","diff","daystr","prevstr","group","tag_ranges","start","end","rangeContainsTag","groups","asOfDate","arguments","undefined","allfound","g","filteredToDate","isAfter","sorted","tagStrToObj","str","matches","trim","treatments","sortBySignal","all_groups","groupForTag","day","groupname","dead","head","width","onClick","sort","perc","name","slice","format","numeral","extendMoment","Moment","deadRecords","today","lastmonth","range","subtract","lastthreemonths","lastyear","deadlastmonth","within","deadlastthreemonths","deadlastyear","totallastmonth","totallastthreemonths","totallastyear","logout","href","ret","active","historySelectionChangeRequested","windowSize","maxHeight","orientation","keyCode","this","onBackspace","onNumber","document","addEventListener","keypressed","bind","removeEventListener","n","onClear","arr","info","isObject","val","clicked","numberClicked","renderCalcRow","clearClicked","backspaceClicked","React","Component","keys","c","k","colorButtonClicked","backgroundColor","treatmentCodes","showTreatmentEditor","treatmentTextClicked","recordsValid","saveRecord","canSave","num","prefix","hideTreatmentEditor","codelistFromText","tokens","code","on","textFromCodelist","list","join","recentTreatmentClicked","codesOn","keyBy","recent","acc","includes","push","recentCodesFromRecords","thiscode","findIndex","treatmentEditorActive","trello","init","dir","flexDirection","_CerebralError","TrelloSaveError","apply","_CerebralError2","TrelloGetError","_CerebralError3","TrelloAuthorizeError","data","CARD_FIELDS","config","warnings","wForgottenReturn","_ref","authorize","e","message","JSON","stringify","stack","initialized","boards","lists","loadList","_ref2","try","boardName","get","fields","b","closed","result","board","post","concat","id","labels","listName","l","_ref3","cards","statePath","_ref4","store","set","reloadOneCard","_ref5","card","putCard","_ref6","url","put","idList","err","addLabelToCard","_ref7","idLabel","saveTreatment","records","existing","cloneDeep","datematches","rest","treatmentmatches","split","cardName","fetchConfig","parse","desc","colorsCardToRecord","codesCardToRecord","parts","each","p","_p$trim$split","_p$trim$split2","propname","propval","toLowerCase","replace","_$map","_$map2","computeStats","deadrecords","incoming","groupdeads","d","index","_templateObject7","_$reduce","tags_and_pens_str","note","tags_and_pens","tp","toUpperCase","toString","errors","tagIndex","tagObjToStr","saveDead","add","isBefore","alreadyDead","existingDate","authorized","resized","isSmall","height","TrelloClientLoadError","check","Trello","delay","resolve","reject","persist","scope","read","write","expiration","success","deauthorize","path","params","_dimensions","innerWidth","innerHeight","seq","_M","dimensions","windowResized","context","sequencepath","updateMsg","sequence","historyGroupSortClicked","parallel","historyGroup","modules","treatmentsModule","incomingModule","deadModule","trelloModule","windowSizeModule","providers","trelloProvider","windowSizeProvider","trelloErrors","CerebralApp","AppModule","devtools","ReactDOM","render","app","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8936fd10.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './TagBar.css';\n\nexport default connect({\n  record: state`record`,\n  colors: state`treatments.colors`,\n     msg: state`msg`,\n  changeRecord: sequences`changeRecord`,\n}, function TagBar(props) {\n  const colorTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({tag: { color: evt.target.value} });\n  };\n\n  const tagNumberTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({tag: { number: +(evt.target.value)} });\n  };\n\n  const color = props.colors[props.record.tag.color];\n  return (\n    <div className=\"tagbar\"\n         style={{ borderColor: props.record.is_saved ? '#CCCCCC' : 'red' }}>\n      <input className=\"colortext\"\n             style={{ color: color, borderColor: color }}\n             value={props.record.tag.color}\n             type=\"text\"\n             onChange={colorTextChanged} />\n      <input className=\"numbertext\"\n             value={props.record.tag.number || ''} \n             type=\"text\" \n             onChange={tagNumberTextChanged} />\n    </div>\n  );\n\n});\n\n","import React from  'react';\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport './Msg.css';\n\nexport default connect({\n  msg: state`msg`,\n}, function Msg(props) {\n  return (\n    <div className={'msg msg' + props.msg.type}>\n      {props.msg.text}\n    </div>\n   );\n});\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport _ from 'lodash';\n\nimport './TreatmentCard.css';\n\nexport default connect({\n}, function TreatmentCard(props) { return (\n  <div className=\"treatmentcard\">\n    <div className=\"treatmentcardcount\">{props.record.tags.length} head</div>\n    -\n    <div className=\"treatmentcardtreatment\">{props.record.treatment}</div>\n    <div className=\"treatmentcardtags\">\n     {_.map(props.record.tags, (t,i) => \n        <div className=\"treatmentcardtag\" key={'treatmentcardtag'+i}>\n          {t.color+t.number}\n        </div>\n      )}\n    </div>\n  </div>\n)});\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport TreatmentCard from './TreatmentCard';\n\nexport default connect({\n   historySelector: state`historySelector`,\n  treatmentRecords: state`treatments.records`,\n            record: state`record`,\n}, function HistoryDate(props) {\n  // Show cards for current date:\n  let recordsfordate = _.filter(props.treatmentRecords, r=>(r.date === props.record.date));\n  recordsfordate = _.reverse(_.sortBy(recordsfordate,r=>r.dateLastActivity));\n\n  const count = _.reduce(recordsfordate, (sum,r) => sum + r.tags.length, 0);\n\n  return (\n    <div className=\"history\">\n      <div className=\"historytitle\">\n        {props.record.date+': '+count} head total.\n      </div>\n      {_.map(recordsfordate, (r,i) => \n        <TreatmentCard key={'treatmentcard'+i}\n                       record={_.clone(r)}\n                       recordindex={i} />\n      )}\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nexport default connect({\n   historySelector: state`historySelector`,\n  treatmentRecords: state`treatments.records`,\n            record: state`record`,\n}, function HistoryTag(props) {\n  // find all records with this tag in it:\n  let recordsfortag = _.filter(props.treatmentRecords, r =>{\n    return _.find(r.tags, t => \n      (t.number===props.record.tag.number && t.color===props.record.tag.color)\n    );}\n  );\n  recordsfortag = _.reverse(_.sortBy(recordsfortag,r=>r.date));\n  let prevdays = -1; // keeps track of previous days in mapper\n  return (\n    <div className=\"historytag\">\n      {_.map(recordsfortag, (r,i) => {\n        const days = moment().diff(moment(r.date,'YYYY-MM-DD'), 'days');\n        let daystr = days + ' days ago';\n        if (days === 0) daystr = 'today';\n        if (days === 1) daystr = 'yesterday';\n        let prevstr = '(+'+(days-prevdays)+')';\n        if (prevdays < 0) prevstr = '';\n        prevdays = days;\n        return (\n        <div className=\"historytagentry\" key={'historyline'+i}>\n          <div className=\"historytreatment\">\n            {r.treatment}\n          </div>\n          <div className=\"historyduration\">\n            { daystr } { prevstr }\n          </div>\n        </div>\n      )})}\n    </div>\n  );\n});\n\n","import _ from 'lodash';\nimport moment from 'moment'; // Note that a tag range is pre-processed to ensure that it\n// only has tags of the same color.  If there is a color\n// split on a group, the group will have 2 separate ranges.\n\nexport var rangeContainsTag = function rangeContainsTag(r, tag) {\n  return tag.color === r.start.color && tag.number >= r.start.number && tag.number <= r.end.number;\n};\nexport var groupContainsTag = function groupContainsTag(group, tag) {\n  //console.log('checking tag ',tag,' against group ranges ', group);\n  return _.find(group.tag_ranges, function (r) {\n    return rangeContainsTag(r, tag);\n  });\n}; // groupForTag has to deal with historic repeated tag color/number\n// combinations.  i.e. 3 years ago another \"RED13\" may have existed.\n// We need to figure out which one of these is the \"correct\" one.\n// This can be slightly fuzzy, because one or two mistakes is not\n// going to break the bank.\n//\n// The simplest algorithm is one that assumes there is only one\n// of each combo on-site at any given time.  Therefore, when a \n// new group comes in and gets tagged, they supercede any previous\n// version of that tag.  So the \"latest\" copy of the tag is always\n// the \"correct\" one for \"today\".\n//\n// Unfortunately, sometimes our scripts may want to compute historic death\n// loss and things like that.  \"historic\" means sometimes we're looking in \n// a date range that is not \"today\".  Therefore, we have to uglify this \n// function definition by adding a third optional parameter of \"asOfDate\"\n// which is the ballpark date of interest: i.e. it will take the tag number\n// as of that day.\n\nexport var groupForTag = function groupForTag(groups, tag) {\n  var asOfDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var allfound = _.filter(groups, function (g) {\n    return groupContainsTag(g, tag);\n  }); // if none, return false:\n\n\n  if (!allfound || allfound.length < 1) return false;\n  if (!asOfDate) asOfDate = moment(); // default to today\n  else asOfDate = moment(asOfDate, 'YYYY-MM-DD');\n\n  var filteredToDate = _.filter(allfound, function (g) {\n    return !moment(g.date, 'YYYY-MM-DD').isAfter(asOfDate);\n  }); // !isAfter = equal or before\n\n\n  if (!filteredToDate) {\n    console.log('WARNING: groupForTag: found multiple possible groups, but after filtering for date there were none left!');\n    return false;\n  }\n\n  var sorted = _.sortBy(filteredToDate, function (g) {\n    return g.date;\n  }); // default lexical sorting will put oldest on top, newest on bottom.  \n  // Need to take the newest one that is prior to the reference date\n\n\n  return sorted[sorted.length - 1];\n};\nexport var tagStrToObj = function tagStrToObj(str) {\n  var matches = str.trim().match(/^([A-Za-z]+) ?([0-9]+)?$/);\n  if (!matches) return {\n    color: 'NOTAG',\n    number: 1\n  };\n  return {\n    color: matches[1],\n    number: +matches[2] || 1\n  };\n};\nexport var tagObjToStr = function tagObjToStr(t) {\n  return !t ? '' : (t.color || '') + '' + (t.number || '');\n};","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport {groupForTag} from 'aultfarms-lib/util/tagHelpers';\n\nimport './HistoryGroup.css';\n\nexport default connect({\n  historySelector: state`historySelector`,\n           groups: state`incoming.records`,\n       treatments: state`treatments.records`,\n           record: state`record`,\n           sortBy: state`historyGroup.sort`,\n  sortBySignal: sequences`historyGroupSortClicked`,\n}, function HistoryGroup(props) {\n  let all_groups = props.groups;\n  const group = groupForTag(props.groups, props.record.tag);\n  if (group) all_groups = [ group ]; // just show group for current tag\n  all_groups = _.sortBy(all_groups, g => {\n    if (props.sortBy === 'date') return g.day; // day string is lexicographic for sorting\n    if (props.sortBy === 'name') return g.groupname;\n    if (props.sortBy === 'dead') return g.dead;\n    if (props.sortBy === 'perc') return (g.dead ? g.dead.length : 0) / (g.head ? g.head : 1);\n    return g.day; // default\n  });\n  all_groups = _.reverse(all_groups); // other way seems better\n  return (\n    <div className=\"historygroup\">\n      { group ? ' Showing group for current tag: '+props.record.tag.color+props.record.tag.number : '' }\n      <table width=\"100%\">\n      <tbody>\n        <tr>\n          <th onClick={() => props.sortBySignal({ sort: 'name'})}>Name</th>\n          <th onClick={() => props.sortBySignal({ sort: 'date'})}>Date</th>\n          <th onClick={() => props.sortBySignal({ sort: 'dead'})}>Dead</th>\n          <th onClick={() => props.sortBySignal({ sort: 'perc'})}>%</th>\n        </tr>\n      { \n        _.map(all_groups, (g,i) => {\n          let perc = 0;\n          if (g.dead && g.head) perc = g.dead.length / g.head;\n          let name = g.groupname;\n          if (name.length > 15) name = name.slice(0,6)+'...'+name.slice(-6);\n          return (\n            <tr className={ perc < .05 ? 'historygroupgood' : perc < 0.1 ? 'historygroupmeh' : 'historygroupbad' } key={'historygrouprow'+i}>\n              <td className=\"historygroupname\"><span name=\"historygroupnamepill\">{ name }</span></td>\n              <td className=\"historygroupdate\"> { moment(g.date,'YYYY-MM-DD').format('M/DD/YY') }</td>\n              <td className=\"historygroupdead\">{ g.dead ? g.dead.length : 0 }</td>\n              <td className=\"historygroupperc\">{ perc > 0 ? '('+numeral(perc).format('0.00%')+')' : '' }</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n      </table>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport { extendMoment } from 'moment-range';\nimport Moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nconst moment = extendMoment(Moment);\n\nexport default connect({\n  historySelector: state`historySelector`,\n      deadRecords: state`dead.records`,\n           record: state`record`,\n}, function HistoryDead(props) {\n\n  const today = moment();\n  const lastmonth = moment.range(today.clone().subtract(1,'months'),today);\n  const lastthreemonths = moment.range(today.clone().subtract(3,'months'),today);\n  const lastyear = moment.range(today.clone().subtract(1,'years'),today);\n\n  const deadlastmonth       = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastmonth));\n  const deadlastthreemonths = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastthreemonths));\n  const deadlastyear        = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastyear));\n\n  const totallastmonth       = _.reduce(deadlastmonth,       (sum,r) => sum+r.tags.length, 0);\n  const totallastthreemonths = _.reduce(deadlastthreemonths, (sum,r) => sum+r.tags.length, 0);\n  const totallastyear        = _.reduce(deadlastyear,        (sum,r) => sum+r.tags.length, 0);\n  return (\n    <div className=\"historydead\">\n      <div className=\"historydeadentry\">\n        Past month: {totallastmonth} dead ({numeral(totallastmonth/lastmonth.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"historydeadentry\">\n        Past 3 months: {totallastthreemonths} dead ({numeral(totallastthreemonths/lastthreemonths.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"historydeadentry\">\n        Past year: {totallastyear} dead ({numeral(totallastyear/lastyear.diff('days')).format('0.00')}/day)\n      </div>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { sequences } from 'cerebral/tags';\n\nimport './Prefs.css';\n\nexport default connect({\n  logout: sequences`logout`,\n}, function Prefs(props) {\n\n  const logoutClicked = evt => {\n    props.logout();\n    evt.preventDefault();\n  }\n\n  return (\n    <div className=\"prefs\">\n      <p className=\"prefslink\" href=\"#\" onClick={logoutClicked}>Change Trello Account</p>\n    </div>\n  );\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport  HistoryDate from './HistoryDate';\nimport   HistoryTag from './HistoryTag';\nimport HistoryGroup from './HistoryGroup';\nimport  HistoryDead from './HistoryDead';\nimport        Prefs from './Prefs';\n\nimport './History.css';\n\nexport default connect({\n   historySelector: state`historySelector`,\n}, function History(props) {\n  let ret = (<div className='history'>Unknown History Type</div>);\n  switch(props.historySelector.active) {\n    case  'date': ret = <HistoryDate />;  break;\n    case   'tag': ret = <HistoryTag />;   break;\n    case 'group': ret = <HistoryGroup />; break;\n    case  'dead': ret = <HistoryDead />;  break;\n    case 'prefs': ret = <Prefs />;  break;\n    default:\n  }\n  return ret;\n});\n\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './HistorySelector.css';\n\nexport default connect({\n  historySelector: state`historySelector`,\n  historySelectionChangeRequested: sequences`historySelectionChangeRequested`,\n}, function HistorySelector(props) {\n  const prefsClicked = evt => props.historySelectionChangeRequested({ active: 'prefs' });\n  const  dateClicked = evt => props.historySelectionChangeRequested({ active: 'date' });\n  const   tagClicked = evt => props.historySelectionChangeRequested({ active: 'tag' });\n  const groupClicked = evt => props.historySelectionChangeRequested({ active: 'group' });\n  const  deadClicked = evt => props.historySelectionChangeRequested({ active: 'dead' });\n\n  return (\n    <div className=\"historyselector\">\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'prefs' ? 'historyselectorbuttonactive' : '')}\n           onClick={prefsClicked}>\n        <FontAwesome name='bars' />\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'date' ? 'historyselectorbuttonactive' : '')}\n           onClick={dateClicked}>\n        Date\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'tag' ? 'historyselectorbuttonactive' : '')}\n           onClick={tagClicked}>\n        Tag\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'group' ? 'historyselectorbuttonactive' : '')}\n           onClick={groupClicked}>\n        Group\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'dead' ? 'historyselectorbuttonactive' : '')}\n           onClick={deadClicked}>\n        Dead\n      </div>\n\n    </div>\n  );\n\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport TagBar from './TagBar';\nimport Msg from './Msg';\nimport History from './History';\nimport HistorySelector from './HistorySelector';\n\nimport './TagPane.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n}, function TagPane(props) {\n  return (\n    <div className='tagpane' style={{ maxHeight: props.windowSize.orientation === 'landscape' ? '98vh' : '49vh' }}>\n      <TagBar />\n      <Msg />\n      <HistorySelector />\n      <History />\n    </div>\n   );\n});\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\n\nimport './Keypad.css';\n\nexport default connect({\n}, class Keypad extends React.Component {\n\n  keypressed(evt) {\n    if (evt.keyCode === 8) {\n      this.props.onBackspace(); // backspace\n      evt.preventDefault();\n    }\n    const number = evt.keyCode - 48; // 0 is key 48\n    if (number >= 0 && number <=9) {\n      this.props.onNumber(number);\n      evt.preventDefault();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  numberClicked(n) {\n    return (evt) => {\n      evt.preventDefault();\n      this.props.onNumber(n);\n    }\n  }\n\n  clearClicked(evt) {\n    evt.preventDefault();\n    this.props.onClear();\n  }\n\n  backspaceClicked(evt) {\n    evt.preventDefault();\n    this.props.onBackspace();\n  }\n\n  renderCalcRow(arr) {\n    return (\n      <div className=\"keypadrow\"> \n        {\n          arr.map(info => \n              <div className=\"keypadbutton\"\n                   key={'calcwrap'+(_.isObject(info) ? info.val : info)}\n                   onClick={_.isObject(info) ? info.clicked : this.numberClicked(info).bind(this) }>\n                {_.isObject(info) ? info.val : info}\n              </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"keypad\">\n        {this.renderCalcRow([1,2,3])}\n        {this.renderCalcRow([4,5,6])}\n        {this.renderCalcRow([7,8,9])}\n        { \n          this.renderCalcRow([\n            { val: 'C', clicked: this.clearClicked.bind(this) },\n            0,\n            { val: '<--', clicked: this.backspaceClicked.bind(this) },\n          ])\n        }\n      </div>\n    );\n  }\n});\n\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './Colorbar.css';\n\nexport default connect({\n  record: state`record`,\n  colors: state`treatments.colors`,\n  changeRecord: sequences`changeRecord`,\n}, class Colorbar extends React.Component {\n\n  keypressed(evt) {\n    let color = '';\n    switch(evt.key) {\n      case 'y': color = 'YELLOW'; break;\n      case 'g': color = 'GREEN'; break;\n      case 'b': color = 'BLUE'; break;\n      case 'r': color = 'RED'; break;\n      case 'p': color = 'PURPLE'; break;\n      case 'w': color = 'WHITE'; break;\n      case 'n': color = 'NOTAG'; break;\n      default: return;\n    }\n    evt.preventDefault();\n    this.props.changeRecord({tag: { color: color } });\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  colorButtonClicked(color) { \n    const props = this.props;\n    return evt => {\n      evt.preventDefault();\n      props.changeRecord({tag: { color: color } });\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"colorbar\">\n        {_.keys(this.props.colors).map((c,k) => \n            <div key={'color'+c} \n                 className=\"colorbutton\"\n                 onClick={this.colorButtonClicked(c)} \n                 style={{backgroundColor: this.props.colors[c] }}>\n            </div>\n         )}\n         <div key={'colorNOTAG'}\n              className=\"colorbutton\"\n              onClick={this.colorButtonClicked('NOTAG')}\n              style={{backgroundColor: '#CCCCCC'}}>\n          N\n        </div>\n      </div>\n    );\n  }\n\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './TreatmentDateBar.css';\n\nexport default connect({\n          record: state`record`,\n  treatmentCodes: state`treatments.treatmentCodes`,\n         changeRecord: sequences`changeRecord`,\n  showTreatmentEditor: sequences`showTreatmentEditor`,\n}, function TreatmentDateBar(props) {\n\n  const dateChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({date: evt.target.value});\n  };\n\n  const treatmentTextClicked = evt => {\n    evt.preventDefault();\n    props.showTreatmentEditor();\n  };\n\n  return (\n    <div className=\"treatmentdatebar\">\n      <input className='treatmentdateinput'\n             value={props.record.date}\n             type=\"date\"\n             onChange={dateChanged} />\n      <input className='treatmentstring'\n             value={props.record.treatment}\n             type=\"text\"\n             onClick={treatmentTextClicked}\n             onChange={treatmentTextClicked}/>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport Keypad from './Keypad.js';\nimport Colorbar from './Colorbar.js';\nimport TreatmentDateBar from './TreatmentDateBar.js';\n\nimport './RecordInput.css';\n\nexport default connect({\n          record: state`record`,\n          colors: state`colors`,\n  treatmentCodes: state`treatments.treatmentCodes`,\n    recordsValid: state`recordsValid`,\n       changeRecord: sequences`changeRecord`,\n         saveRecord: sequences`saveRecord`,\n}, function RecordInput(props) {\n\n  const numberClicked = num => {\n    const prefix = '' + (props.record.tag.number || ''); // convert to string\n    props.changeRecord({tag: { number: prefix+num} });\n  };\n\n  const clearClicked = () => {\n    props.changeRecord({ tag: { number: '', color: '' } });\n  };\n\n  const backspaceClicked = () => {\n    let str = ''+props.record.tag.number;\n    if (str.length > 0) str = str.slice(0,-1);\n    props.changeRecord({ tag: { number: +(str) } });\n  };\n\n  const canSave = props.recordsValid && props.record.tag && props.record.tag.number && props.record.tag.color;\n\n  const recordSaveClicked = evt => {\n    if (canSave) {\n      evt.preventDefault();\n      props.saveRecord();\n    }\n  };\n\n  return (\n    <div className=\"recordinput\">\n\n      <Colorbar />\n\n      <TreatmentDateBar />\n\n      <Keypad onNumber={numberClicked}\n              onClear={clearClicked}\n              onBackspace={backspaceClicked} />\n\n      <div className={'savebutton ' + (canSave ? 'savebuttonenabled':'savebuttondisabled')}\n           onClick={recordSaveClicked}>\n        SAVE TREATMENT\n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {sequences,state} from 'cerebral/tags';\n\nimport './TreatmentEditor.css';\n\nexport default connect({\n            record: state`record`,\n    treatmentCodes: state`treatments.treatmentCodes`,\n  treatmentRecords: state`treatments.records`,\n         changeRecord: sequences`changeRecord`,\n  hideTreatmentEditor: sequences`hideTreatmentEditor`,\n}, function TreatmentEditor(props) {\n  const treatmentTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({ treatment: evt.target.value() });\n  };\n\n\n  const codelistFromText = text => {\n    let tokens = text.match(/([A-Z]([a-z]+)?)/g); // [ 'Z', 'Za', etc]\n    if (!tokens) tokens = [];\n    return _.map(props.treatmentCodes, c => {\n      return {\n        code: c.code,\n        name: c.name,\n        on: !!_.find(tokens,t=>c.code===t),\n      };\n    });\n  };\n  const textFromCodelist = list => _.join(_.map(_.filter(list,c=>c.on),c=>c.code),'');\n  const treatmentCodeButtonClicked = code => evt => {\n    // turn on/off this code in the list\n    const list = codelistFromText(props.record.treatment);\n    const thiscode = _.findIndex(list,c=>c.code===code);\n    if (thiscode<0) return;\n    list[thiscode].on = !list[thiscode].on;\n    props.changeRecord({ treatment: textFromCodelist(list) });\n  };\n\n  const recentCodesFromRecords = () => {\n    const sorted = _.reverse(_.sortBy(props.treatmentRecords,[ r => r.date, r => r.dateLastActivity ]));\n    return _.reduce(sorted,(acc,r) => {\n      if (acc.length >= 5) return acc; // only get 5 most recent\n      if (_.includes(acc,r.treatment)) return acc;\n      acc.push(r.treatment);\n      return acc;\n    },[]);\n  }\n  const recentTreatmentClicked = t => evt => props.changeRecord({treatment: t});\n\n  const treatmentEditorDoneClicked = evt => props.hideTreatmentEditor();\n  const codesOn = _.keyBy(codelistFromText(props.record.treatment),c=>c.code);\n  const recent = recentCodesFromRecords();\n  return (\n    <div className='treatmentEditor'>\n      \n      <input className='treatmentEditorTextInput'\n             type='text'\n             value={props.record.treatment}\n             onChange={treatmentTextChanged} />\n\n      <div className='treatmentCodesList'>\n        {_.map(props.treatmentCodes, (c,i) => \n          <div className={'treatmentCodeButton ' + (codesOn[c.code].on ? 'codeOn' : 'codeOff')}\n               key={'treatmentCodeButton'+i}\n               onClick={treatmentCodeButtonClicked(c.code)}>\n            <div className='treatmentCodeButtonCode'>\n              {c.code}\n            </div>\n            <div className='treatmentCodeButtonName'>\n              {c.name}\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div className='recentTreatmentsList'>\n        <div className='recentText'>Recent: </div>\n        {_.map(recent, (t,i) =>\n          <div className='recentTreatmentsButton'\n               key={'recentTreatments'+i}\n               onClick={recentTreatmentClicked(t)}>\n            {t}\n          </div>\n        )}\n      </div>\n\n      <div className='treatmentEditorDoneButton'\n           onClick={treatmentEditorDoneClicked}>\n        Done\n      </div>\n\n    </div>\n  );\n\n});\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport TagPane from './TagPane';\nimport RecordInput from './RecordInput';\nimport TreatmentEditor from './TreatmentEditor';\n\nimport './App.css';\n\nexport default connect({\n  treatmentEditorActive: state`treatmentEditorActive`,\n             windowSize: state`windowSize`,\n                 trello: state`trello`,\n  init: sequences`init`,\n}, class App extends React.Component {\n\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    const dir = this.props.windowSize.orientation === 'landscape' ? 'row' : 'column';\n\n    if (this.props.treatmentEditorActive) {\n      return (\n        <div className=\"App\" style={{ flexDirection: 'column' }} >\n          <TreatmentEditor />\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\" style={{ flexDirection: dir }}>\n        <TagPane />\n        <RecordInput />\n      </div>\n    );\n  }\n\n});\n","import _classCallCheck from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { CerebralError } from 'cerebral';\nexport var TrelloSaveError =\n/*#__PURE__*/\nfunction (_CerebralError) {\n  _inherits(TrelloSaveError, _CerebralError);\n\n  function TrelloSaveError() {\n    _classCallCheck(this, TrelloSaveError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloSaveError).apply(this, arguments));\n  }\n\n  return TrelloSaveError;\n}(CerebralError);\n;\nexport var TrelloGetError =\n/*#__PURE__*/\nfunction (_CerebralError2) {\n  _inherits(TrelloGetError, _CerebralError2);\n\n  function TrelloGetError() {\n    _classCallCheck(this, TrelloGetError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloGetError).apply(this, arguments));\n  }\n\n  return TrelloGetError;\n}(CerebralError);\n;\nexport var TrelloAuthorizeError =\n/*#__PURE__*/\nfunction (_CerebralError3) {\n  _inherits(TrelloAuthorizeError, _CerebralError3);\n\n  function TrelloAuthorizeError() {\n    _classCallCheck(this, TrelloAuthorizeError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloAuthorizeError).apply(this, arguments));\n  }\n\n  return TrelloAuthorizeError;\n}(CerebralError);\n;","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"trello.lists.\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"trello.authorized\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"trello.authorized\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport _ from 'lodash';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { set } from 'cerebral/factories';\nimport Promise from 'bluebird';\nimport * as errors from './errors';\nvar CARD_FIELDS = 'name,id,closed,desc,dateLastActivity,labels,idList'; // For some reason cerebral seems to trigger these dumb warnings\n\nPromise.config({\n  // Enables all warnings except forgotten return statements.\n  warnings: {\n    wForgottenReturn: false\n  }\n}); //-----------------------------------------------\n// authorize and deauthorize\n\nexport var authorize = [function (_ref) {\n  var trello = _ref.trello;\n  return trello.authorize().catch(function (e) {\n    e.message = 'Failed to authorize trello: ' + e.message + JSON.stringify(e.stack);\n    throw new errors.TrelloAuthorizeError(e);\n  });\n}, set(state(_templateObject()), true)];\nexport var deauthorize = [set(state(_templateObject2()), false), sequence('deauthorize->authorize', authorize)]; //-----------------------------------------------------------\n// loadList sequence: given a board and list name in props, \n// load it into the state from Trello\n// props = { boardName, listName, key } the list's data will be put at trello.lists.<key>\n// We will keep a promise for each board/list that we need to verify exists\n// in order to prevent simulataneous accesses from creating duplicate boards/lists\n// when they see that a board doesn't exist yet.\n\nvar initialized = {\n  boards: {},\n  lists: {}\n};\nexport var loadList = sequence('trello.loadList', [function (_ref2) {\n  var props = _ref2.props,\n      trello = _ref2.trello;\n  var ret = {}; // First get the board\n\n  return Promise.try(function () {\n    if (initialized.boards[props.boardName]) return initialized.boards[props.boardName]; // if this is a promise, then someone else is initializing or it's done already\n    // Start by getting board, create if doesn't exist, save promise in \"initialized\":\n\n    return initialized.boards[props.boardName] = trello.get('members/me/boards', {\n      fields: 'name,id,closed'\n    }).filter(function (b) {\n      return b && !b.closed;\n    }).then(function (result) {\n      var board = _.find(result, function (b) {\n        return b.name === props.boardName;\n      });\n\n      if (board) return board;\n      console.log('Could not find board ' + props.boardName + ', creating it.');\n      return trello.post('boards', {\n        name: props.boardName\n      }); // the result of this call is the board object itself\n    });\n  }).then(function (board) {\n    ret.board = board;\n  }) // Then get the labels:\n  .then(function () {\n    return trello.get(\"boards/\".concat(ret.board.id, \"/labels\"), {\n      fields: 'id,name,color'\n    });\n  }).then(function (labels) {\n    ret.labels = labels;\n  }) // Then get the list info:\n  .then(function () {\n    if (initialized.lists[props.listName]) return initialized.lists[props.listName];\n    return initialized.lists[props.listName] = trello.get(\"boards/\".concat(ret.board.id, \"/lists\"), {\n      fields: 'name,id,closed,cards'\n    }).filter(function (l) {\n      return l && !l.closed;\n    }).then(function (result) {\n      var list = _.find(result, function (l) {\n        return l.name === props.listName;\n      });\n\n      if (list) return list;\n      console.log('Could not find list ' + props.listName + ', creating it.');\n      return trello.post(\"boards/\".concat(ret.board.id, \"/lists\"), {\n        name: props.listName\n      }); // resolves to the list object itself\n    });\n  }).then(function (list) {\n    ret.list = list;\n  }) // Now setup the final return statement and catch:\n  .then(function () {\n    return ret;\n  }).catch(function (error) {\n    error.message = 'Failed to get list ' + props.listName + ': ' + error.message;\n    throw new errors.TrelloGetError(error);\n  });\n}, // Now get the cards for this list:\nfunction (_ref3) {\n  var props = _ref3.props,\n      trello = _ref3.trello;\n  return trello.get('lists/' + props.list.id + '/cards', {\n    fields: CARD_FIELDS\n  }).filter(function (c) {\n    return c && !c.closed;\n  }) // Save the state path for this card inside the card itself so we can easily update later\n  .then(function (cards) {\n    return _.keyBy(_.map(cards, function (c) {\n      c.statePath = \"trello.lists.\".concat(props.key, \".\").concat(c.id);\n      return c;\n    }), function (c) {\n      return c.id;\n    });\n  }).then(function (result) {\n    return {\n      cards: result\n    };\n  }).catch(function (error) {\n    error.message = 'Failed to get cards for list ' + props.listName + ': ' + error.message;\n    throw new errors.TrelloGetError(error);\n  });\n}, // Put everything into state:\nfunction (_ref4) {\n  var props = _ref4.props,\n      store = _ref4.store,\n      get = _ref4.get;\n  store.set(state(_templateObject3(), props.key), {\n    id: props.list.id,\n    name: props.list.name,\n    cards: props.cards,\n    board: props.board,\n    labels: props.labels\n  });\n}]); // All this does is refresh the card object in-place.  It does not check that\n// it is still in the same board.\n\nexport var reloadOneCard = sequence('trello.reloadOneCard', [function (_ref5) {\n  var trello = _ref5.trello,\n      props = _ref5.props,\n      store = _ref5.store;\n  if (!props.card || !props.card.id) return;\n  return trello.get(\"cards/\".concat(props.card.id), {\n    fields: CARD_FIELDS\n  }).then(function (card) {\n    card.statePath = props.card.statePath;\n    store.set(state(_templateObject4(), props.card.statePath), card);\n  });\n}]); // props.card = {\n//   id: 'only use if this card already exists',\n//   name: 'the name to put',\n//   idList: 'id of list for card, required no matter what',\n// }\n\nexport var putCard = sequence('trello.putCard', [function (_ref6) {\n  var trello = _ref6.trello,\n      props = _ref6.props;\n  return Promise.try(function () {\n    var url = 'cards/';\n\n    if (!props.card.id) {\n      // card does not exist, do a post\n      return trello.post(url, {\n        name: props.card.name,\n        idList: props.card.idList\n      });\n    }\n\n    url += props.card.id + '/'; // card already exists, do a put to that card\n\n    return trello.put(url, {\n      name: props.card.name,\n      idList: props.card.idList\n    });\n  }).catch(function (err) {\n    throw new errors.TrelloSaveError('Failed to save to card', err);\n  });\n}, reloadOneCard]); // props.id, props.idLabel\n\nexport var addLabelToCard = sequence('trello.addLabelToCard', [function (_ref7) {\n  var trello = _ref7.trello,\n      props = _ref7.props;\n  trello.post(\"cards/\".concat(props.card.id, \"/idLabels\"), {\n    value: props.idLabel\n  });\n}, // Get the board name that goes with this card\nreloadOneCard]);","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"treatments.treatmentCodes\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"treatments.colors\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"trello.lists.treatments.id\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { set } from 'cerebral/operators';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { tagStrToObj } from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------\n// save one treatment\n\nexport var saveTreatment = [// find existing card that matches this date and treatment (if it exists):\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n  var ret = false;\n  var records = get(state(_templateObject()));\n\n  var existing = _.find(records, function (r) {\n    return r.date === props.record.date && r.treatment === props.record.treatment;\n  });\n\n  if (!existing) {\n    ret = _.cloneDeep(props.record);\n    ret.tags = [ret.tag];\n    return {\n      record: ret\n    }; // existing record is fine as-is in props, just needed array of tags instead of just one\n  } // Otherwise, check if this tag is already in the list:\n\n\n  var alreadyInList = _.find(existing.tags, function (t) {\n    return props.record.tag.color === t.color && props.record.tag.number === t.number;\n  });\n\n  if (alreadyInList) return {\n    record: existing\n  }; // replace record in props with existing record\n  // Otherwise, add record to the list of existing tags since it's not already there\n\n  ret = _.cloneDeep(existing);\n  ret.tags.push(props.record.tag); // replace record in props with this new one:\n\n  return {\n    record: ret\n  };\n}, // convert record to card\nfunction (_ref2) {\n  var props = _ref2.props,\n      store = _ref2.store,\n      get = _ref2.get;\n  return {\n    card: {\n      id: props.record.id,\n      idList: props.record.idList || get(state(_templateObject2())),\n      name: props.record.date + ': ' + props.record.treatment + ': ' + _.join(_.map(props.record.tags, function (t) {\n        return t.color + t.number;\n      }), ' ')\n    }\n  };\n}, // Put the card to trello:\ntrello.putCard]; //---------------------------------------------------------------------\n// fetch all treatment records:\n\nvar treatmentCardToRecord = function treatmentCardToRecord(c) {\n  if (!c) return null;\n  var name = c.name;\n  var datematches = name.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}):(.*)$/);\n  if (!datematches || datematches.length < 3) return null;\n  var date = datematches[1].trim();\n  var rest = datematches[2].trim();\n  var treatmentmatches = rest.match(/^(.+):(.*)$/);\n  if (!treatmentmatches || treatmentmatches.length < 3) return null;\n  var treatment = treatmentmatches[1].trim();\n  rest = treatmentmatches[2].trim();\n\n  var tags = _.map(_.split(rest, ' '), tagStrToObj);\n\n  return {\n    date: date,\n    treatment: treatment,\n    tags: tags,\n    id: c.id,\n    idList: c.idList,\n    cardName: c.name,\n    dateLastActivity: c.dateLastActivity\n  };\n};\n\nexport var fetch = sequence('treatments.fetch', [// get the cards\nfunction () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Treatments',\n    key: 'treatments'\n  };\n}, trello.loadList, // convert all props.cards to records:\nfunction (_ref3) {\n  var props = _ref3.props,\n      store = _ref3.store;\n  return store.set(state(_templateObject3()), _.map(props.cards, treatmentCardToRecord));\n}]); //---------------------------------------------------------------------\n// fetch the config cards (colors, treatmentCodes)\n\nvar colorsCardToRecord = function colorsCardToRecord(c) {\n  return c ? JSON.parse(c.desc) : null;\n};\n\nvar codesCardToRecord = function codesCardToRecord(c) {\n  return c ? JSON.parse(c.desc) : null;\n};\n\nexport var fetchConfig = sequence('treatments.fetchConfig', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Config',\n    key: 'livestockConfig'\n  };\n}, // get the colors and codes cards:\ntrello.loadList, // save colors in state:\nsequence('saveColors', [function (_ref4) {\n  var props = _ref4.props,\n      store = _ref4.store;\n  return store.set(state(_templateObject4()), colorsCardToRecord(_.find(props.cards, function (c) {\n    return c.name === 'Tag Colors';\n  })));\n}]), // save treatment codes in state:\nsequence('saveCodes', [function (_ref5) {\n  var props = _ref5.props,\n      store = _ref5.store;\n  return store.set(state(_templateObject5()), codesCardToRecord(_.find(props.cards, function (c) {\n    return c.name === 'Treatment Types';\n  })));\n}])]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    treatmentCodes: [{\n      \"code\": \"Z\",\n      \"name\": \"Zuprevo\"\n    }, {\n      \"code\": \"Za\",\n      \"name\": \"Zactran\"\n    }, {\n      \"code\": \"Dr\",\n      \"name\": \"Draxxin\"\n    }, {\n      \"code\": \"N\",\n      \"name\": \"Nuflor\"\n    }, {\n      \"code\": \"No\",\n      \"name\": \"Noromycin\"\n    }, {\n      \"code\": \"P\",\n      \"name\": \"Pennicillin\"\n    }, {\n      \"code\": \"Px\",\n      \"name\": \"Polyflex\"\n    }, {\n      \"code\": \"By\",\n      \"name\": \"Baytril\"\n    }, {\n      \"code\": \"Ex\",\n      \"name\": \"Excenel\"\n    }, {\n      \"code\": \"S\",\n      \"name\": \"Sulfa\"\n    }, {\n      \"code\": \"D\",\n      \"name\": \"Dex\"\n    }, {\n      \"code\": \"E\",\n      \"name\": \"Electrolytes\"\n    }, {\n      \"code\": \"Ht\",\n      \"name\": \"High Temp\"\n    }, {\n      \"code\": \"Lt\",\n      \"name\": \"Low Temp\"\n    }, {\n      \"code\": \"Nt\",\n      \"name\": \"No Temp\"\n    }],\n    colors: {\n      \"ORANGE\": \"#FF9900\",\n      \"YELLOW\": \"#E9E602\",\n      \"MARTYELL\": \"#FF00FF\",\n      \"BLACK\": \"#000000\",\n      \"RED\": \"#FF0000\",\n      \"WHITE\": \"#FFFFFF\"\n    },\n    records: [// {\n      //   date: 2018-03-17,\n      //   treatment: 'DrExHt',\n      //   tags: [\n      //     { number: 123, color: 'ORANGE' }\n      //   ]\n      // },\n    ]\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"incoming.records.\", \".dead\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport _ from 'lodash';\nimport { set } from 'cerebral/factories';\nimport { sequence, state, CerebralError } from 'cerebral';\nimport { tagStrToObj, groupForTag\n/*rangeContainsTag*/\n} from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------------\n// fetch all incoming records:\n\nvar incomingCardToRecord = function incomingCardToRecord(c) {\n  if (!c) return null;\n  var name = c.name;\n  var matches = name.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}):? *([^;]+);(.*)$/);\n  var ret = {};\n  ret.date = matches[1];\n  ret.groupname = matches[2];\n  var rest = matches[3];\n  var parts = rest.split(';');\n\n  _.each(parts, function (p) {\n    var _p$trim$split = p.trim().split(':'),\n        _p$trim$split2 = _slicedToArray(_p$trim$split, 2),\n        propname = _p$trim$split2[0],\n        propval = _p$trim$split2[1];\n\n    ret[propname.toLowerCase().trim()] = propval.trim();\n  }); // If there are tag range(s), parse that out as well\n\n\n  if (ret.tags) {\n    ret.tags = ret.tags.replace(/ /g, ''); // get rid of any spaces\n\n    ret.tag_ranges = _.reduce(ret.tags.split(','), function (acc, r) {\n      // each range turns into 1 or 2 objects depending on color split\n      var _$map = _.map(r.split('-'), tagStrToObj),\n          _$map2 = _slicedToArray(_$map, 2),\n          start = _$map2[0],\n          end = _$map2[1]; // map start and end into objects\n\n\n      if (start.color !== end.color) {\n        acc.push({\n          start: start,\n          end: {\n            color: start.color,\n            number: 1000\n          }\n        });\n        acc.push({\n          start: {\n            color: end.color,\n            number: 1\n          },\n          end: end\n        });\n        return acc;\n      }\n\n      acc.push({\n        start: start,\n        end: end\n      });\n      return acc;\n    }, []);\n  }\n\n  ret.id = c.id;\n  ret.idList = c.idList;\n  ret.cardName = c.name;\n  ret.dateLastActivity = c.dateLastActivity;\n  return ret;\n};\n\nexport var fetch = sequence('incoming.fetch', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Incoming',\n    key: 'incoming'\n  };\n}, // get the cards\ntrello.loadList, // convert all props.cards to records:\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store;\n  return store.set(state(_templateObject()), _.map(props.cards, incomingCardToRecord));\n}]);\nexport var computeStats = sequence('incoming.computeStats', [function (_ref2) {\n  var get = _ref2.get,\n      store = _ref2.store;\n  // check if we have both dead and incoming records:\n  var deadrecords = get(state(_templateObject2()));\n  var incoming = get(state(_templateObject3())); // group all deads into the appropriate incoming group, keyed by groupname\n\n  var groupdeads = _.reduce(deadrecords, function (acc, d) {\n    if (!d.tags) console.log('incoming.computeStats: WARNING: dead record has no tags.  Card name = ', d.cardName);\n\n    _.each(d.tags, function (t) {\n      var g = groupForTag(incoming, t, d.date);\n      if (!g) return; // this is likely an old tag that has no known group, or a notag\n\n      if (!acc[g.groupname]) acc[g.groupname] = [];\n      acc[g.groupname].push({\n        date: d.date,\n        tag: t\n      });\n    });\n\n    return acc;\n  }, {}); // walk through all incoming records and add a \"dead\" key with the list of dead\n\n\n  _.each(incoming, function (g, index) {\n    store.set(state(_templateObject4(), index), groupdeads[g.groupname] || []);\n  });\n}]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    records: [// {\n      //   date: 2018-03-17,\n      //   groupname: 'MICH:MAR18-1',\n      //   weight: '274.35',\n      //   head: 250,\n      //   tags: [ \n      //     { \n      //       start: { number: 123, color: 'ORANGE' }, // NOTE: a color split will\n      //       end: { number: 372, color: 'ORANGE' },   // show up as multiple ranges\n      //     },\n      //   ],\n      //   id: 'kf2jlk', // ID of card\n      //   idList: '29ifjkl', // ID of Incoming list in Trello\n      //   cardName: '2018-03-17: MICH:MAR18-1; Head: 250; Weight: 274.35; Tags: ORANGE123-ORANGE372;',\n      // },\n    ]\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"trello.lists.dead.id\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"dead.tagIndex\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"dead.errors\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { set } from 'cerebral/factories';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { tagStrToObj, tagObjToStr, groupForTag } from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------------\n// fetch all dead records:\n\nvar deadCardToRecord = function deadCardToRecord(c) {\n  try {\n    if (!c) return null;\n    var name = c.name;\n    var matches = name.match(/^([0-9]{4}-[0-9]{1,2}-[0-9]{1,2}):?(.*)$/);\n    var day = matches[1];\n    var tags_and_pens_str = matches[2]; // Save the note if there is one:\n\n    matches = tags_and_pens_str.match(/[Nn][Oo][Tt][Ee]:(.*)$/);\n    var note = false;\n    if (matches) note = matches[1]; // Ditch anything in parentheses:\n\n    tags_and_pens_str = tags_and_pens_str.replace(/\\(.*\\)/g, '');\n    var tags_and_pens = tags_and_pens_str.match(/([A-Za-z']+ ?([0-9]+)?)/g);\n    tags_and_pens = _.map(tags_and_pens, function (tp) {\n      return tp.trim();\n    });\n    tags_and_pens = _.map(tags_and_pens, function (tp) {\n      return tp === 'NT' ? 'NOTAG1' : tp;\n    }); // eliminate everything that isn't just tags\n\n    var tags = _.filter(tags_and_pens, function (t) {\n      return !t.match(/^[NSB][0-9S]{1,2}$/i) && // N1, NS, S1, B3\n      !t.match(/^OB[SN]?[NS]?$/) && // OBS, OBN, OB, OBNS\n      !t.match(/^HB$/i) && !t.match(/^HEIFER$/i) && !t.match(/^DRY( ?(LOT|COW))?$/i) && !t.match(/^DAIRY$/i) && !t.match(/^APRIL'?S?$/i) && !t.match(/^WOODS$/i) && !t.match(/^BARN ?[1-3]$/i) && !t.match(/^dead/i) && !t.match(/^total/i) && !t.match(/^and/i);\n    }); // fixup bad tags:\n\n\n    tags = _.map(tags, function (t) {\n      return t.toUpperCase().replace(/ /g, '');\n    });\n    tags = _.map(tags, function (t) {\n      return t === 'NOTAG' ? 'NOTAG1' : t;\n    }); // parse all the tag strings into tag objects\n\n    tags = _.map(tags, tagStrToObj);\n    return {\n      date: day,\n      tags: tags,\n      note: note,\n      id: c.id,\n      idList: c.idList,\n      cardName: c.name,\n      dateLastActivity: c.dateLastActivity\n    }; // If anything goes wrong, just put an error record here:\n  } catch (err) {\n    return {\n      cardName: c.name,\n      idList: c.idList,\n      id: c.id,\n      error: err.toString()\n    };\n  }\n};\n\nexport var fetch = sequence('dead.fetch', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Dead',\n    key: 'dead'\n  };\n}, // get the cards\ntrello.loadList, // convert all props.cards to records or errors:\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n\n  var _$reduce = _.reduce(props.cards, function (acc, c) {\n    var r = deadCardToRecord(_.cloneDeep(c));\n    if (r.error) acc.errors.push(r);else acc.records.push(r);\n    return acc;\n  }, {\n    errors: [],\n    records: []\n  }),\n      errors = _$reduce.errors,\n      records = _$reduce.records;\n\n  store.set(state(_templateObject()), records);\n  store.set(state(_templateObject2()), errors); // re-index all dead records as { tagstr: { groupname: date } }\n\n  var incoming = get(state(_templateObject3()));\n\n  var tagIndex = _.reduce(records, function (acc, r) {\n    if (!r.tags) return acc;\n\n    _.each(r.tags, function (t) {\n      var str = tagObjToStr(t);\n      var g = groupForTag(incoming, t, r.date);\n      if (!g) g = {\n        groupname: \"NONE\"\n      }; // early tags have no group\n\n      if (!acc[str]) acc[str] = {};\n      acc[str][g.groupname] = r.date;\n    });\n\n    return acc;\n  }, {});\n\n  store.set(state(_templateObject4()), tagIndex);\n}]);\nexport var saveDead = sequence('dead.saveDead', [// Check if this tag is already in any of the days 14 before or after date\n// in order to prevent duplicates:\nfunction (_ref2) {\n  var props = _ref2.props,\n      store = _ref2.store,\n      get = _ref2.get;\n  var records = get(state(_templateObject5()));\n  var start = moment(props.record.date, 'YYYY-MM-DD').subtract(14, 'days');\n  var end = moment(props.record.date, 'YYYY-MM-DD').add(14, 'days');\n\n  var alreadyDead = _.find(records, function (r) {\n    var d = moment(r.date, 'YYYY-MM-DD'); // Not within date range?\n\n    if (!start.isBefore(d) || !end.isAfter(d)) return false; // Tag not already in list?\n\n    if (!_.find(r.tags, function (t) {\n      return t.color === props.record.tag.color && t.number === props.record.tag.number;\n    })) return false; // In date range and tag already in list\n\n    return true;\n  });\n\n  if (alreadyDead) {\n    return {\n      alreadyDead: true\n    };\n  }\n}, // Find existing card for this date if there is one\nfunction (_ref3) {\n  var props = _ref3.props,\n      store = _ref3.store,\n      get = _ref3.get;\n  if (props.alreadyDead) return;\n  var ret = false;\n  var records = get(state(_templateObject6()));\n\n  var existingDate = _.find(records, function (r) {\n    return r.date === props.record.date;\n  }); // If there isn't one, just update record to have \"tags\" as array rather than one tag\n\n\n  if (!existingDate) {\n    ret = _.cloneDeep(props.record);\n    ret.tags = [ret.tag];\n    return {\n      record: ret\n    };\n  } // Otherwise, there is an existing card for this date, add the tag to its list:\n\n\n  ret = _.cloneDeep(existingDate);\n  ret.tags.push(props.record.tag);\n  return {\n    record: ret\n  };\n}, // convert record to card\nfunction (_ref4) {\n  var props = _ref4.props,\n      store = _ref4.store,\n      get = _ref4.get;\n  var card = props.record.card || {};\n  card.id = props.record.id;\n  card.idList = props.record.idList || get(state(_templateObject7())), card.name = props.record.date + ': ' + _.join(_.map(props.record.tags, function (t) {\n    return t.color + t.number;\n  }), ' ') + (props.record.note ? 'Note: ' + props.record.note : '');\n  return {\n    card: card\n  };\n}, // Put the card to Trello:\ntrello.putCard]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    tagIndex: {},\n    records: [// {\n      //   date: 2018-03-17,\n      //   tags: [ { number: 123, color: 'ORANGE' }],\n      //   id: '02kjlwfj0f23',                // ID of the card\n      //   idList: '2fj0ijosdf',              // ID of the dead list\n      //   cardName: '2018-03-17: ORANGE123', // original card, for debugging\n      //   dateLastActivity: '2018-03-17',    // for sorting by \"recent\"-ness\n      // },\n    ]\n  }\n};","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    authorized: false,\n    lists: {// feed: {\n      //   name: 'Feed Delivered'\n      //   id: 'kdj20fi32jld',\n      //   cards: { ... },  // the regular trello list of cards\n      // }\n    }\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"windowSize.isSmall\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"windowSize.isSmall\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"windowSize.orientation\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"windowSize.orientation\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { state, sequence } from 'cerebral';\nexport var resized = sequence('windowSize.resized', [function (_ref) {\n  var windowSize = _ref.windowSize,\n      props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n\n  if (get(state(_templateObject())) !== windowSize.orientation()) {\n    store.set(state(_templateObject2()), windowSize.orientation());\n  }\n\n  var isSmall = windowSize.orientation() === 'portrait' ? props.width < 767 : props.height < 500;\n  if (get(state(_templateObject3())) !== isSmall) store.set(state(_templateObject4()), isSmall);\n}]);\nexport var init = sequence('windowSize.init', [function (_ref2) {\n  var windowSize = _ref2.windowSize;\n  return windowSize.init('windowSize.resized');\n}, // registers event listener for window resize events\nresized]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    isSmall: true,\n    // changes to true for mobile, false for computer\n    orientation: 'portrait' // portrait | landscape\n\n  }\n};","import _classCallCheck from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Provider, CerebralError } from 'cerebral';\nimport Promise from 'bluebird';\nexport var TrelloClientLoadError =\n/*#__PURE__*/\nfunction (_CerebralError) {\n  _inherits(TrelloClientLoadError, _CerebralError);\n\n  function TrelloClientLoadError() {\n    _classCallCheck(this, TrelloClientLoadError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloClientLoadError).apply(this, arguments));\n  }\n\n  return TrelloClientLoadError;\n}(CerebralError);\n; // dev key: 3ad06cb25802014a3f24f479e886771c\n// URL to refresh client lib: https://api.trello.com/1/client.js?key=3ad06cb25802014a3f24f479e886771c\n\nvar waitUntilLoaded = function waitUntilLoaded() {\n  return Promise.try(function () {\n    var count = 0;\n\n    var check = function check() {\n      if (window.Trello) return true;\n      if (count++ > 50) throw TrelloClientLoadError('Could not load Trello client library');\n      return Promise.delay(250).then(check);\n    };\n\n    return Promise.try(check);\n  });\n}; // Promisify the normal Trello client:\n\n\nexport default Provider({\n  //-------------------------------------------------\n  // call authorize first before any other functions in this provider:\n  authorize: function authorize() {\n    return waitUntilLoaded().then(function () {\n      return new Promise(function (resolve, reject) {\n        window.Trello.authorize({\n          type: 'redirect',\n          name: 'Ault Farms - Invoices',\n          persist: true,\n          scope: {\n            read: 'true',\n            write: 'true'\n          },\n          expiration: 'never',\n          success: resolve,\n          error: function error(err) {\n            console.log('Failed to authorize Trello: err = ', err);\n            reject(err);\n          }\n        });\n        return null;\n      });\n    });\n  },\n  deauthorize: function deauthorize() {\n    return new Promise(function (resolve, reject) {\n      window.Trello.deauthorize();\n      resolve();\n    });\n  },\n  get: function get(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.get(path, params || {}, resolve, function (err) {\n        console.log('Trello.get ERROR: ', err);\n        reject(err);\n      });\n    });\n  },\n  put: function put(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.put(path, params, resolve, function (err) {\n        console.log('Trello.put ERROR: ', err);\n        reject(err);\n      });\n    });\n  },\n  post: function post(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.post(path, params, resolve, function (err) {\n        console.log('Trello.post ERROR: ', err);\n        reject(err);\n      });\n    });\n  }\n});","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/treatments/apps/treatments/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { sequences } from 'cerebral';\n\nvar _dimensions = function dimensions() {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n};\n\nvar seq = '';\nvar _M = {\n  dimensions: function dimensions() {\n    return _dimensions();\n  },\n  orientation: function orientation() {\n    var d = _dimensions();\n\n    return d.width > d.height ? 'landscape' : 'portrait';\n  },\n  windowResized: function windowResized() {\n    this.context.get(sequences(_templateObject(), seq))(_dimensions());\n  },\n  init: function init(sequencepath) {\n    seq = sequencepath;\n    window.addEventListener('resize', _M.windowResized.bind(this)); // compute it the first time:\n\n    this.context.get(sequences(_templateObject2(), sequencepath))(_dimensions());\n  }\n};\nexport default _M;","import { set } from 'cerebral/factories';\nimport { state,props } from 'cerebral/tags';\nimport { sequence, parallel } from 'cerebral';\n\nimport * as treatments from 'aultfarms-lib/treatments/module/sequences';\nimport * as incoming   from 'aultfarms-lib/incoming/module/sequences';\nimport * as dead       from 'aultfarms-lib/dead/module/sequences';\nimport * as trello     from 'aultfarms-lib/trello/module/sequences';\nimport * as windowSize from 'aultfarms-lib/windowSize/module/sequences';\n\nexport const updateMsg = sequence('updateMsg', [\n  ({props,get,store}) => {\n    if (props.msg) return state.set('msg', props.msg);\n    if (!get(state`trello.authorized`)) \n      return store.set(state`msg`, { type: 'bad', text: 'You are not logged in to Trello.' });\n    if (get(state`record.is_saved`)) \n      return store.set(state`msg`, { type: 'good', text: 'Treatment record saved.'});\n    store.set(state`msg`, { type: 'bad', text: 'Treatment record not saved'});\n  },\n]);\n\nexport const showTreatmentEditor = sequence('app.showTreatmentEditor', [ \n  set(state`treatmentEditorActive`,true)  \n]);\nexport const hideTreatmentEditor = sequence('app.hideTreatmentEditor', [ \n  set(state`treatmentEditorActive`,false) \n]);\n\nexport const historySelectionChangeRequested = sequence('app.historySelectionChangeRequested', [ \n  set(state`historySelector.active`, props`active`), \n]);\nexport const historyGroupSortClicked = sequence('app.historyGroupSortClicked', [ \n  set(state`historyGroup.sort`, props`sort`) \n]);\n\nexport const changeRecord = sequence('app.changeRecord', [ \n  ({props,store,get}) => {\n    // Only the first time that the is_saved gets set to false, automatically\n    // switch the Date/Tag pane to Tag since we're typing a tag now.\n    if (get(state`record.is_saved`) && !props.date) store.set(state`historySelector.active`, 'tag');\n    // if they are changing a record that has already been saved, go ahead and clear out\n    // the textbox for them\n    if (props.date)                    store.set(state`record.date`, props.date);\n    if (props.treatment)               store.set(state`record.treatment`, props.treatment);\n    if (props.tag && typeof props.tag.color === 'string') {\n      store.set(state`record.tag.color`, props.tag.color);\n      if (props.tag.color === 'NOTAG') store.set(state`record.tag.number`,'1');\n    }\n    if (props.tag && (typeof props.tag.number === 'string' || typeof props.tag.number === 'number')) {\n      store.set(state`record.tag.number`, +(props.tag.number));\n    }\n    if (!props.date) {\n      store.set(state`record.is_saved`, false);\n    }\n  },\n  updateMsg,\n]);\nexport const logout = sequence('app.logout', [ trello.deauthorize, trello.authorize]);\n\nexport const saveRecord = sequence('app.saveRecord', [ \n  set(props`record`, state`record`),\n  set(state`recordsValid`, false),\n  set(state`msg`, { type: 'good', text: 'Saving card...' }),\n  treatments.saveTreatment,\n  set(state`msg`, { type: 'good', text: 'Refreshing records...' }),\n  treatments.fetch,\n  set(state`recordsValid`, true),\n  set(state`record.is_saved`, true),\n  set(state`record.tag.number`, ''),\n  set(state`historySelector.active`, 'date'),\n  updateMsg,\n]);\n\nexport const init = sequence('app.init', [\n  windowSize.init,\n  set(state`msg`, { type: 'good', text: 'Checking trello authorization...' }),\n  trello.authorize,\n  set(state`msg`, { type: 'good', text: 'Fetching records...' }),\n  parallel('app.init.parallel', [\n    treatments.fetch,\n    treatments.fetchConfig,\n    incoming.fetch,\n    dead.fetch,\n  ]),\n  set(state`msg`, { type: 'good', text: 'Computing stats...' }),\n  incoming.computeStats,\n  set(state`recordsValid`, true),\n  set(state`msg`, { type: 'good', text: 'Loaded successfully.'}),\n]);\n","import moment from 'moment';\nimport { set } from 'cerebral/factories';\nimport { state } from 'cerebral/tags';\n\n\nimport treatmentsModule from 'aultfarms-lib/treatments/module';\nimport   incomingModule from 'aultfarms-lib/incoming/module';\nimport       deadModule from 'aultfarms-lib/dead/module';\nimport     trelloModule from 'aultfarms-lib/trello/module';\nimport windowSizeModule from 'aultfarms-lib/windowSize/module';\n\nimport     trelloProvider from 'aultfarms-lib/trello/provider';\nimport windowSizeProvider from 'aultfarms-lib/windowSize/provider';\n\nimport * as trelloErrors from 'aultfarms-lib/trello/module/errors';\n\nimport * as sequences from './sequences';\n\nexport default {\n  sequences,\n  state: { \n    recordsValid: false,\n    treatmentEditorActive: false,\n    historySelector: {\n      active: 'date', // date/tag/group/dead\n    },\n    historyGroup: {\n      sort: 'date', // date/name/dead/perc\n    },\n\n    msg: {\n      type: 'bad',\n      text: 'Treatment record not saved.',\n    },\n\n    record: {\n      date: moment().format('YYYY-MM-DD'),\n      treatment: 'NoExHt',\n      tag: {\n        color: '',\n        number: 0,\n      },\n      is_saved: true,\n    },\n\n  },\n  modules: {\n    treatments: treatmentsModule,\n      incoming: incomingModule,\n          dead: deadModule,\n        trello: trelloModule,\n    windowSize: windowSizeModule,\n  },\n  providers: {\n        trello: trelloProvider,\n    windowSize: windowSizeProvider,\n  },\n  catch: [\n    [ trelloErrors.TrelloSaveError,      [ set(state`msg`, 'ERROR: failed to save in Trello')      ] ],\n    [ trelloErrors.TrelloGetError,       [ set(state`msg`, 'ERROR: failed to get in Trello')       ] ],\n    [ trelloErrors.TrelloAuthorizeError, [ set(state`msg`, 'ERROR: failed to authorize in Trello') ] ],\n  ],\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport App from './App';\nimport AppModule from './module';\n\nimport CerebralApp from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport devtools from 'cerebral/devtools';\n\nimport 'pure-css';\nimport './index.css';\n\nconst controller = CerebralApp(AppModule, {\n  devtools: process.env.NODE_ENV === 'production' ? null : devtools({host: 'localhost:8000', reconnect: true }),\n});\n\n\n// Render the root node:\nReactDOM.render(\n  <Container app={controller}>\n    <App />\n  </Container>, document.getElementById('root')\n);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}